{
  "language": "Solidity",
  "sources": {
    "contracts/factories/ProxyFactory.sol": {
      "content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.14;\n\n/// @title ProxyFactory contract\ncontract ProxyFactory {\n    /// @notice Creates a new contract based on the target contract address provided\n    /// @param target contract address to be cloned\n    /// @return result address of the new contract\n    function clone(address target) external returns (address result) {\n        bytes20 targetBytes = bytes20(target);\n        // solhint-disable-next-line\n        assembly {\n            let clone := mload(0x40)\n            mstore(\n                clone,\n                0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000\n            )\n            mstore(add(clone, 0x14), targetBytes)\n            mstore(\n                add(clone, 0x28),\n                0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000\n            )\n            result := create(0, clone, 0x37)\n        }\n    }\n}\n"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": true,
      "runs": 100000
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata",
          "devdoc",
          "userdoc",
          "storageLayout",
          "evm.gasEstimates"
        ],
        "": [
          "ast"
        ]
      }
    },
    "metadata": {
      "useLiteralContent": true
    }
  }
}