{
  "id": "9683e0b18a3e073533bb94e8111f9c0a",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.13",
  "solcLongVersion": "0.8.13+commit.abaa5c0e",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/test/veBalMock.sol": {
        "content": "//mock of vebal contract from mainnet\n//by address 0xC128a9954e6c874eA3d62ce62B468bA073093F25\n\n// solium-disable linebreak-style\npragma solidity 0.8.13;\n\n// import \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ninterface BAL_ERC20 { //was just ERC20 in their Vyper contract\n    function decimals() external view returns (uint256);\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function transfer(address to, uint256 amount) external returns (bool); //nonpayable\n    function transferFrom(address spender, address to, uint256 amount) external returns (bool); //nonpayable\n}\n// Interface for checking whether address belongs to a whitelisted\n// type of a smart wallet.\n// When new types are added - the whole contract is changed\n// The check() method is modifying to be able to use caching\n// for individual wallet addresses \ninterface SmartWalletChecker {\n    function check(address addr) external returns (bool);//nonpayable\n}   \n\n// contract BalMock is ERC20, ReentrancyGuard, SmartWalletChecker, BALERC20 {\ncontract veBalMock is ReentrancyGuard {\n// contract BalMock is BAL_ERC20, SmartWalletChecker{//}, ReentrancyGuard {\n\n    struct Point{\n        int128 bias;\n        int128 slope; // - dweight / dt\n        uint256 ts;\n        uint256 blk; // block\n    }\n    // We cannot really do block numbers per se b/c slope is per time, not per block\n    // and per block could be fairly bad b/c Ethereum changes blocktimes.\n    // What we can do is to extrapolate ***At functions\n\n    struct LockedBalance{\n        int128 amount; \n        uint256 end;\n    }  \n\n    address constant ZERO_ADDRESS = address(0x0000000000000000000000000000000000000000);\n\n    int128 constant DEPOSIT_FOR_TYPE = 0;\n    int128 constant CREATE_LOCK_TYPE = 1;\n    int128 constant INCREASE_LOCK_AMOUNT = 2;\n    int128 constant INCREASE_UNLOCK_TIME = 3;\n\n    event Deposit(address indexed provider, uint256 value, uint256 indexed locktime, int128 type_, uint256 ts); //if just type without _ --> was highlited as error\n    event Withdraw(address indexed provider, uint256 value, uint256 ts);\n    event Supply(uint256 prevSupply, uint256 supply);\n\n    uint256 constant WEEK = 7 * 86400; //all future times are rounded by week\n    uint256 constant MAXTIME = 365 * 86400;  // 1 year\n    uint256 constant MULTIPLIER = 10 ** 18;\n\n\n    address immutable TOKEN; \n    address immutable AUTHORIZER_ADAPTOR; //Authorizer Adaptor\n\n    //string is not succorted to be immutable in solidity\n    string public NAME; //immutable NAME;\n    string public SYMBOL; //immutable SYMBOL; \n    uint256 immutable DECIMALS;\n\n    // uint256 public supply;\n    mapping(address => uint256) supply;\n    uint256 private _totalSupply;\n\n    mapping(address => LockedBalance) public locked;\n\n    uint256 public epoch;\n\n    Point[100000000000000000000000000000] public point_history; //epoch -> unsigned point\n    mapping(address => Point[1000000000]) private user_point_history; //user -> Point[user_epoch]\n    mapping(address => uint256) public user_point_epoch;\n    mapping(uint256 => int128) public slope_changes; //time -> signed slope change\n\n    // Checker for whitelisted (smart contract) wallets which are allowed to deposit\n    // The goal is to prevent tokenizing the escrow\n    address public future_smart_wallet_checker;\n    address public smart_wallet_checker;\n\n\n    //__init__\n    constructor(\n        address token_addr,\n        string memory _name,\n        string memory  _symbol,\n        address _authorizer_adaptor\n    ) //ERC20(_name, _symbol)\n    public {\n        /**\n        @notice Contract constructor\n        @param token_addr 80/20 BAL-WETH BPT token address\n        @param _name Token name\n        @param _symbol Token symbol\n        @param _authorizer_adaptor `AuthorizerAdaptor` contract address\n        */\n        require(_authorizer_adaptor != ZERO_ADDRESS, \"BalMock: _authorizer_adaptor == ZERO_ADDRESS\");\n\n        TOKEN = token_addr;\n        AUTHORIZER_ADAPTOR = _authorizer_adaptor;\n        point_history[0].blk = block.number;\n        point_history[0].ts = block.timestamp;\n\n        uint256 _decimals = BAL_ERC20(token_addr).decimals();\n        require(_decimals <= 255, \"BalMock: _decimals > 255\");\n\n        NAME = _name;\n        SYMBOL = _symbol;\n        DECIMALS = _decimals;\n    }\n\n\n    function token() external view returns (address){\n        return TOKEN;\n    }\n    function name() public view virtual returns (string memory){\n        return NAME;\n    }\n    function symbol() public view virtual returns (string memory){\n        return SYMBOL;\n    }\n    function decimals() public view virtual returns (uint256){\n        return DECIMALS;\n    }\n    function admin() external view returns (address){\n        return AUTHORIZER_ADAPTOR;\n    }\n    function commit_smart_wallet_checker(address addr) external {}\n    function apply_smart_wallet_checker() external {}\n    function assert_not_contract(address addr) internal {}    \n    function get_last_user_slope(address addr) external view returns (int128){\n        /**\n        @notice Get the most recently recorded rate of voting power decrease for `addr`\n        @param addr Address of the user wallet\n        @return Value of the slope\n        */\n        uint256 uepoch = user_point_epoch[addr];\n        return user_point_history[addr][uepoch].slope;\n    }\n    function user_point_history__ts(address _addr, uint256 _idx) external view returns (uint256){\n        /**\n        @notice Get the timestamp for checkpoint `_idx` for `_addr`\n        @param _addr User wallet address\n        @param _idx User epoch number\n        @return Epoch time of the checkpoint\n    */\n        return user_point_history[_addr][_idx].ts;\n    }\n    function locked__end(address _addr) external view returns (uint256){\n        /**\n        @notice Get timestamp when `_addr`'s lock finishes\n        @param _addr User wallet\n        @return Epoch time of the lock end\n        */\n        return locked[_addr].end;\n    }\n\n// FROM ERC20\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        supply[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n// FROM ERC20 END\n\n    function _checkpoint(address addr, LockedBalance memory old_locked, LockedBalance memory new_locked) internal {}\n    function _deposit_for(address _addr, uint256 _value, uint256 unlock_time, LockedBalance memory locked_balance, int128 type_) internal {}\n    function checkpoint() external {}\n    function deposit_for(address _addr, uint256 _value) external nonReentrant {\n        _mint(_addr, _value);\n    }\n\n    function create_lock(uint256 tokens) external nonReentrant {\n        _mint(msg.sender, tokens);\n        // BAL_ERC20(TOKEN).transferFrom(msg.sender, tokens);\n    }\n\n    function increase_amount(uint256) external nonReentrant {}\n    function increase_unlock_time(uint256 _unlock_time) external nonReentrant {}\n    function withdraw() external nonReentrant {}\n\n    // The following ERC20/minime-compatible methods are not real balanceOf and supply!\n    // They measure the weights for the purpose of voting, so they don't represent\n    // real coins.\n\n    function find_block_epoch(uint256 _block, uint256 max_epoch) internal view returns (uint256){\n        /**\n        @notice Binary search to find epoch containing block number\n        @param _block Block to find\n        @param max_epoch Don't go beyond this epoch\n        @return Epoch which contains _block\n        */\n\n        // Binary search\n        uint256 _min = 0;\n        uint256 _max = max_epoch;\n        //some code\n\n        return _min;\n    }\n    function find_timestamp_epoch(uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\n        /**\n        @notice Binary search to find epoch for timestamp\n        @param _timestamp timestamp to find\n        @param max_epoch Don't go beyond this epoch\n        @return Epoch which contains _timestamp\n        */\n\n        // Binary search\n        uint256 _min = 0;\n        uint256 _max = max_epoch;\n        //some code\n        \n        return _min;\n    }\n    function find_block_user_epoch(address addr, uint256 _block, uint256 max_epoch) internal view returns (uint256){\n        /**\n        @notice Binary search to find epoch for block number\n        @param _addr User for which to find user epoch for\n        @param _block Block to find\n        @param max_epoch Don't go beyond this epoch\n        @return Epoch which contains _block\n        */\n\n        // Binary search\n        uint256 _min = 0;\n        uint256 _max = max_epoch;\n        //some code\n        \n        return _min;\n    }\n    function find_timestamp_user_epoch(address addr, uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\n        /**\n        @notice Binary search to find user epoch for timestamp\n        @param _addr User for which to find user epoch for\n        @param _timestamp timestamp to find\n        @param max_epoch Don't go beyond this epoch\n        @return Epoch which contains _timestamp\n        */\n\n        // Binary search\n        uint256 _min = 0;\n        uint256 _max = max_epoch;\n        //some code\n        \n        return _min;\n    }\n    function balanceOf(address addr, uint256 _t) external view returns (uint256){\n        /**\n        @notice Get the current voting power for `msg.sender`\n        @dev Adheres to the ERC20 `balanceOf` interface for Aragon compatibility\n        @param addr User wallet address\n        @param _t Epoch time to return voting power at\n        @return User voting power\n        */\n        uint256 _t = block.timestamp;\n\n        //some code and actual rerurn is not 1\n        return 1;\n    }\n    function balanceOfAt(address addr, uint256 _block) external view returns (uint256){\n        //some code and actual rerurn is not 1\n        return 1;\n    }\n    function supply_at(Point memory p, uint256 t) internal view returns (uint256){\n        //some code and actual rerurn is not 1\n        return 1;    \n    }\n    function totalSupply(uint256 t) external view returns (uint256){\n        uint256 t = block.timestamp;\n        //some code and actual rerurn is not 1\n        return 1;    \n    }\n    function totalSupplyAt(uint256 _block) external view returns (uint256){\n        /**\n        @notice Calculate total voting power at some point in the past\n        @param _block Block to calculate the total voting power at\n        @return Total voting power at `_block`\n        */\n\n        require(_block <= block.number, \"_block > block.number\");\n        uint256 _epoch = epoch;\n        uint256 target_epoch = find_block_epoch(_block, _epoch);\n\n        Point memory point = point_history[target_epoch];\n        uint256 dt = 0;\n        if (target_epoch < _epoch){\n            Point memory point_next = point_history[target_epoch + 1];\n            if (point.blk != point_next.blk){\n                dt = (_block - point.blk) * (point_next.ts - point.ts) / (point_next.blk - point.blk);\n            }\n        }else{\n            if (point.blk != block.number){\n                dt = (_block - point.blk) * (block.timestamp - point.ts) / (block.number - point.blk);\n            }\n        }\n        // Now dt contains info on how far are we beyond point\n\n        return supply_at(point, point.ts + dt);\n\n        //some code and actual return is not 1\n        // return 1; \n    }\n\n}\n\n\n"
      },
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [],
          "devdoc": {
            "details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 10,
                "contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
                "label": "_status",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              }
            ],
            "types": {
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/test/veBalMock.sol": {
        "BAL_ERC20": {
          "abi": [
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/veBalMock.sol\":\"BAL_ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/test/veBalMock.sol\":{\"content\":\"//mock of vebal contract from mainnet\\n//by address 0xC128a9954e6c874eA3d62ce62B468bA073093F25\\n\\n// solium-disable linebreak-style\\npragma solidity 0.8.13;\\n\\n// import \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ninterface BAL_ERC20 { //was just ERC20 in their Vyper contract\\n    function decimals() external view returns (uint256);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function transfer(address to, uint256 amount) external returns (bool); //nonpayable\\n    function transferFrom(address spender, address to, uint256 amount) external returns (bool); //nonpayable\\n}\\n// Interface for checking whether address belongs to a whitelisted\\n// type of a smart wallet.\\n// When new types are added - the whole contract is changed\\n// The check() method is modifying to be able to use caching\\n// for individual wallet addresses \\ninterface SmartWalletChecker {\\n    function check(address addr) external returns (bool);//nonpayable\\n}   \\n\\n// contract BalMock is ERC20, ReentrancyGuard, SmartWalletChecker, BALERC20 {\\ncontract veBalMock is ReentrancyGuard {\\n// contract BalMock is BAL_ERC20, SmartWalletChecker{//}, ReentrancyGuard {\\n\\n    struct Point{\\n        int128 bias;\\n        int128 slope; // - dweight / dt\\n        uint256 ts;\\n        uint256 blk; // block\\n    }\\n    // We cannot really do block numbers per se b/c slope is per time, not per block\\n    // and per block could be fairly bad b/c Ethereum changes blocktimes.\\n    // What we can do is to extrapolate ***At functions\\n\\n    struct LockedBalance{\\n        int128 amount; \\n        uint256 end;\\n    }  \\n\\n    address constant ZERO_ADDRESS = address(0x0000000000000000000000000000000000000000);\\n\\n    int128 constant DEPOSIT_FOR_TYPE = 0;\\n    int128 constant CREATE_LOCK_TYPE = 1;\\n    int128 constant INCREASE_LOCK_AMOUNT = 2;\\n    int128 constant INCREASE_UNLOCK_TIME = 3;\\n\\n    event Deposit(address indexed provider, uint256 value, uint256 indexed locktime, int128 type_, uint256 ts); //if just type without _ --> was highlited as error\\n    event Withdraw(address indexed provider, uint256 value, uint256 ts);\\n    event Supply(uint256 prevSupply, uint256 supply);\\n\\n    uint256 constant WEEK = 7 * 86400; //all future times are rounded by week\\n    uint256 constant MAXTIME = 365 * 86400;  // 1 year\\n    uint256 constant MULTIPLIER = 10 ** 18;\\n\\n\\n    address immutable TOKEN; \\n    address immutable AUTHORIZER_ADAPTOR; //Authorizer Adaptor\\n\\n    //string is not succorted to be immutable in solidity\\n    string public NAME; //immutable NAME;\\n    string public SYMBOL; //immutable SYMBOL; \\n    uint256 immutable DECIMALS;\\n\\n    // uint256 public supply;\\n    mapping(address => uint256) supply;\\n    uint256 private _totalSupply;\\n\\n    mapping(address => LockedBalance) public locked;\\n\\n    uint256 public epoch;\\n\\n    Point[100000000000000000000000000000] public point_history; //epoch -> unsigned point\\n    mapping(address => Point[1000000000]) private user_point_history; //user -> Point[user_epoch]\\n    mapping(address => uint256) public user_point_epoch;\\n    mapping(uint256 => int128) public slope_changes; //time -> signed slope change\\n\\n    // Checker for whitelisted (smart contract) wallets which are allowed to deposit\\n    // The goal is to prevent tokenizing the escrow\\n    address public future_smart_wallet_checker;\\n    address public smart_wallet_checker;\\n\\n\\n    //__init__\\n    constructor(\\n        address token_addr,\\n        string memory _name,\\n        string memory  _symbol,\\n        address _authorizer_adaptor\\n    ) //ERC20(_name, _symbol)\\n    public {\\n        /**\\n        @notice Contract constructor\\n        @param token_addr 80/20 BAL-WETH BPT token address\\n        @param _name Token name\\n        @param _symbol Token symbol\\n        @param _authorizer_adaptor `AuthorizerAdaptor` contract address\\n        */\\n        require(_authorizer_adaptor != ZERO_ADDRESS, \\\"BalMock: _authorizer_adaptor == ZERO_ADDRESS\\\");\\n\\n        TOKEN = token_addr;\\n        AUTHORIZER_ADAPTOR = _authorizer_adaptor;\\n        point_history[0].blk = block.number;\\n        point_history[0].ts = block.timestamp;\\n\\n        uint256 _decimals = BAL_ERC20(token_addr).decimals();\\n        require(_decimals <= 255, \\\"BalMock: _decimals > 255\\\");\\n\\n        NAME = _name;\\n        SYMBOL = _symbol;\\n        DECIMALS = _decimals;\\n    }\\n\\n\\n    function token() external view returns (address){\\n        return TOKEN;\\n    }\\n    function name() public view virtual returns (string memory){\\n        return NAME;\\n    }\\n    function symbol() public view virtual returns (string memory){\\n        return SYMBOL;\\n    }\\n    function decimals() public view virtual returns (uint256){\\n        return DECIMALS;\\n    }\\n    function admin() external view returns (address){\\n        return AUTHORIZER_ADAPTOR;\\n    }\\n    function commit_smart_wallet_checker(address addr) external {}\\n    function apply_smart_wallet_checker() external {}\\n    function assert_not_contract(address addr) internal {}    \\n    function get_last_user_slope(address addr) external view returns (int128){\\n        /**\\n        @notice Get the most recently recorded rate of voting power decrease for `addr`\\n        @param addr Address of the user wallet\\n        @return Value of the slope\\n        */\\n        uint256 uepoch = user_point_epoch[addr];\\n        return user_point_history[addr][uepoch].slope;\\n    }\\n    function user_point_history__ts(address _addr, uint256 _idx) external view returns (uint256){\\n        /**\\n        @notice Get the timestamp for checkpoint `_idx` for `_addr`\\n        @param _addr User wallet address\\n        @param _idx User epoch number\\n        @return Epoch time of the checkpoint\\n    */\\n        return user_point_history[_addr][_idx].ts;\\n    }\\n    function locked__end(address _addr) external view returns (uint256){\\n        /**\\n        @notice Get timestamp when `_addr`'s lock finishes\\n        @param _addr User wallet\\n        @return Epoch time of the lock end\\n        */\\n        return locked[_addr].end;\\n    }\\n\\n// FROM ERC20\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        supply[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n// FROM ERC20 END\\n\\n    function _checkpoint(address addr, LockedBalance memory old_locked, LockedBalance memory new_locked) internal {}\\n    function _deposit_for(address _addr, uint256 _value, uint256 unlock_time, LockedBalance memory locked_balance, int128 type_) internal {}\\n    function checkpoint() external {}\\n    function deposit_for(address _addr, uint256 _value) external nonReentrant {\\n        _mint(_addr, _value);\\n    }\\n\\n    function create_lock(uint256 tokens) external nonReentrant {\\n        _mint(msg.sender, tokens);\\n        // BAL_ERC20(TOKEN).transferFrom(msg.sender, tokens);\\n    }\\n\\n    function increase_amount(uint256) external nonReentrant {}\\n    function increase_unlock_time(uint256 _unlock_time) external nonReentrant {}\\n    function withdraw() external nonReentrant {}\\n\\n    // The following ERC20/minime-compatible methods are not real balanceOf and supply!\\n    // They measure the weights for the purpose of voting, so they don't represent\\n    // real coins.\\n\\n    function find_block_epoch(uint256 _block, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch containing block number\\n        @param _block Block to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _block\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n\\n        return _min;\\n    }\\n    function find_timestamp_epoch(uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch for timestamp\\n        @param _timestamp timestamp to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _timestamp\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function find_block_user_epoch(address addr, uint256 _block, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch for block number\\n        @param _addr User for which to find user epoch for\\n        @param _block Block to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _block\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function find_timestamp_user_epoch(address addr, uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find user epoch for timestamp\\n        @param _addr User for which to find user epoch for\\n        @param _timestamp timestamp to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _timestamp\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function balanceOf(address addr, uint256 _t) external view returns (uint256){\\n        /**\\n        @notice Get the current voting power for `msg.sender`\\n        @dev Adheres to the ERC20 `balanceOf` interface for Aragon compatibility\\n        @param addr User wallet address\\n        @param _t Epoch time to return voting power at\\n        @return User voting power\\n        */\\n        uint256 _t = block.timestamp;\\n\\n        //some code and actual rerurn is not 1\\n        return 1;\\n    }\\n    function balanceOfAt(address addr, uint256 _block) external view returns (uint256){\\n        //some code and actual rerurn is not 1\\n        return 1;\\n    }\\n    function supply_at(Point memory p, uint256 t) internal view returns (uint256){\\n        //some code and actual rerurn is not 1\\n        return 1;    \\n    }\\n    function totalSupply(uint256 t) external view returns (uint256){\\n        uint256 t = block.timestamp;\\n        //some code and actual rerurn is not 1\\n        return 1;    \\n    }\\n    function totalSupplyAt(uint256 _block) external view returns (uint256){\\n        /**\\n        @notice Calculate total voting power at some point in the past\\n        @param _block Block to calculate the total voting power at\\n        @return Total voting power at `_block`\\n        */\\n\\n        require(_block <= block.number, \\\"_block > block.number\\\");\\n        uint256 _epoch = epoch;\\n        uint256 target_epoch = find_block_epoch(_block, _epoch);\\n\\n        Point memory point = point_history[target_epoch];\\n        uint256 dt = 0;\\n        if (target_epoch < _epoch){\\n            Point memory point_next = point_history[target_epoch + 1];\\n            if (point.blk != point_next.blk){\\n                dt = (_block - point.blk) * (point_next.ts - point.ts) / (point_next.blk - point.blk);\\n            }\\n        }else{\\n            if (point.blk != block.number){\\n                dt = (_block - point.blk) * (block.timestamp - point.ts) / (block.number - point.blk);\\n            }\\n        }\\n        // Now dt contains info on how far are we beyond point\\n\\n        return supply_at(point, point.ts + dt);\\n\\n        //some code and actual return is not 1\\n        // return 1; \\n    }\\n\\n}\\n\\n\\n\",\"keccak256\":\"0x8df5e59256315fba846eed57deb168b84647d02ddae6bfae3dc7a4cf66ae6653\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "SmartWalletChecker": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "name": "check",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "check(address)": "c23697a8"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/veBalMock.sol\":\"SmartWalletChecker\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/test/veBalMock.sol\":{\"content\":\"//mock of vebal contract from mainnet\\n//by address 0xC128a9954e6c874eA3d62ce62B468bA073093F25\\n\\n// solium-disable linebreak-style\\npragma solidity 0.8.13;\\n\\n// import \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ninterface BAL_ERC20 { //was just ERC20 in their Vyper contract\\n    function decimals() external view returns (uint256);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function transfer(address to, uint256 amount) external returns (bool); //nonpayable\\n    function transferFrom(address spender, address to, uint256 amount) external returns (bool); //nonpayable\\n}\\n// Interface for checking whether address belongs to a whitelisted\\n// type of a smart wallet.\\n// When new types are added - the whole contract is changed\\n// The check() method is modifying to be able to use caching\\n// for individual wallet addresses \\ninterface SmartWalletChecker {\\n    function check(address addr) external returns (bool);//nonpayable\\n}   \\n\\n// contract BalMock is ERC20, ReentrancyGuard, SmartWalletChecker, BALERC20 {\\ncontract veBalMock is ReentrancyGuard {\\n// contract BalMock is BAL_ERC20, SmartWalletChecker{//}, ReentrancyGuard {\\n\\n    struct Point{\\n        int128 bias;\\n        int128 slope; // - dweight / dt\\n        uint256 ts;\\n        uint256 blk; // block\\n    }\\n    // We cannot really do block numbers per se b/c slope is per time, not per block\\n    // and per block could be fairly bad b/c Ethereum changes blocktimes.\\n    // What we can do is to extrapolate ***At functions\\n\\n    struct LockedBalance{\\n        int128 amount; \\n        uint256 end;\\n    }  \\n\\n    address constant ZERO_ADDRESS = address(0x0000000000000000000000000000000000000000);\\n\\n    int128 constant DEPOSIT_FOR_TYPE = 0;\\n    int128 constant CREATE_LOCK_TYPE = 1;\\n    int128 constant INCREASE_LOCK_AMOUNT = 2;\\n    int128 constant INCREASE_UNLOCK_TIME = 3;\\n\\n    event Deposit(address indexed provider, uint256 value, uint256 indexed locktime, int128 type_, uint256 ts); //if just type without _ --> was highlited as error\\n    event Withdraw(address indexed provider, uint256 value, uint256 ts);\\n    event Supply(uint256 prevSupply, uint256 supply);\\n\\n    uint256 constant WEEK = 7 * 86400; //all future times are rounded by week\\n    uint256 constant MAXTIME = 365 * 86400;  // 1 year\\n    uint256 constant MULTIPLIER = 10 ** 18;\\n\\n\\n    address immutable TOKEN; \\n    address immutable AUTHORIZER_ADAPTOR; //Authorizer Adaptor\\n\\n    //string is not succorted to be immutable in solidity\\n    string public NAME; //immutable NAME;\\n    string public SYMBOL; //immutable SYMBOL; \\n    uint256 immutable DECIMALS;\\n\\n    // uint256 public supply;\\n    mapping(address => uint256) supply;\\n    uint256 private _totalSupply;\\n\\n    mapping(address => LockedBalance) public locked;\\n\\n    uint256 public epoch;\\n\\n    Point[100000000000000000000000000000] public point_history; //epoch -> unsigned point\\n    mapping(address => Point[1000000000]) private user_point_history; //user -> Point[user_epoch]\\n    mapping(address => uint256) public user_point_epoch;\\n    mapping(uint256 => int128) public slope_changes; //time -> signed slope change\\n\\n    // Checker for whitelisted (smart contract) wallets which are allowed to deposit\\n    // The goal is to prevent tokenizing the escrow\\n    address public future_smart_wallet_checker;\\n    address public smart_wallet_checker;\\n\\n\\n    //__init__\\n    constructor(\\n        address token_addr,\\n        string memory _name,\\n        string memory  _symbol,\\n        address _authorizer_adaptor\\n    ) //ERC20(_name, _symbol)\\n    public {\\n        /**\\n        @notice Contract constructor\\n        @param token_addr 80/20 BAL-WETH BPT token address\\n        @param _name Token name\\n        @param _symbol Token symbol\\n        @param _authorizer_adaptor `AuthorizerAdaptor` contract address\\n        */\\n        require(_authorizer_adaptor != ZERO_ADDRESS, \\\"BalMock: _authorizer_adaptor == ZERO_ADDRESS\\\");\\n\\n        TOKEN = token_addr;\\n        AUTHORIZER_ADAPTOR = _authorizer_adaptor;\\n        point_history[0].blk = block.number;\\n        point_history[0].ts = block.timestamp;\\n\\n        uint256 _decimals = BAL_ERC20(token_addr).decimals();\\n        require(_decimals <= 255, \\\"BalMock: _decimals > 255\\\");\\n\\n        NAME = _name;\\n        SYMBOL = _symbol;\\n        DECIMALS = _decimals;\\n    }\\n\\n\\n    function token() external view returns (address){\\n        return TOKEN;\\n    }\\n    function name() public view virtual returns (string memory){\\n        return NAME;\\n    }\\n    function symbol() public view virtual returns (string memory){\\n        return SYMBOL;\\n    }\\n    function decimals() public view virtual returns (uint256){\\n        return DECIMALS;\\n    }\\n    function admin() external view returns (address){\\n        return AUTHORIZER_ADAPTOR;\\n    }\\n    function commit_smart_wallet_checker(address addr) external {}\\n    function apply_smart_wallet_checker() external {}\\n    function assert_not_contract(address addr) internal {}    \\n    function get_last_user_slope(address addr) external view returns (int128){\\n        /**\\n        @notice Get the most recently recorded rate of voting power decrease for `addr`\\n        @param addr Address of the user wallet\\n        @return Value of the slope\\n        */\\n        uint256 uepoch = user_point_epoch[addr];\\n        return user_point_history[addr][uepoch].slope;\\n    }\\n    function user_point_history__ts(address _addr, uint256 _idx) external view returns (uint256){\\n        /**\\n        @notice Get the timestamp for checkpoint `_idx` for `_addr`\\n        @param _addr User wallet address\\n        @param _idx User epoch number\\n        @return Epoch time of the checkpoint\\n    */\\n        return user_point_history[_addr][_idx].ts;\\n    }\\n    function locked__end(address _addr) external view returns (uint256){\\n        /**\\n        @notice Get timestamp when `_addr`'s lock finishes\\n        @param _addr User wallet\\n        @return Epoch time of the lock end\\n        */\\n        return locked[_addr].end;\\n    }\\n\\n// FROM ERC20\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        supply[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n// FROM ERC20 END\\n\\n    function _checkpoint(address addr, LockedBalance memory old_locked, LockedBalance memory new_locked) internal {}\\n    function _deposit_for(address _addr, uint256 _value, uint256 unlock_time, LockedBalance memory locked_balance, int128 type_) internal {}\\n    function checkpoint() external {}\\n    function deposit_for(address _addr, uint256 _value) external nonReentrant {\\n        _mint(_addr, _value);\\n    }\\n\\n    function create_lock(uint256 tokens) external nonReentrant {\\n        _mint(msg.sender, tokens);\\n        // BAL_ERC20(TOKEN).transferFrom(msg.sender, tokens);\\n    }\\n\\n    function increase_amount(uint256) external nonReentrant {}\\n    function increase_unlock_time(uint256 _unlock_time) external nonReentrant {}\\n    function withdraw() external nonReentrant {}\\n\\n    // The following ERC20/minime-compatible methods are not real balanceOf and supply!\\n    // They measure the weights for the purpose of voting, so they don't represent\\n    // real coins.\\n\\n    function find_block_epoch(uint256 _block, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch containing block number\\n        @param _block Block to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _block\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n\\n        return _min;\\n    }\\n    function find_timestamp_epoch(uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch for timestamp\\n        @param _timestamp timestamp to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _timestamp\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function find_block_user_epoch(address addr, uint256 _block, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch for block number\\n        @param _addr User for which to find user epoch for\\n        @param _block Block to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _block\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function find_timestamp_user_epoch(address addr, uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find user epoch for timestamp\\n        @param _addr User for which to find user epoch for\\n        @param _timestamp timestamp to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _timestamp\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function balanceOf(address addr, uint256 _t) external view returns (uint256){\\n        /**\\n        @notice Get the current voting power for `msg.sender`\\n        @dev Adheres to the ERC20 `balanceOf` interface for Aragon compatibility\\n        @param addr User wallet address\\n        @param _t Epoch time to return voting power at\\n        @return User voting power\\n        */\\n        uint256 _t = block.timestamp;\\n\\n        //some code and actual rerurn is not 1\\n        return 1;\\n    }\\n    function balanceOfAt(address addr, uint256 _block) external view returns (uint256){\\n        //some code and actual rerurn is not 1\\n        return 1;\\n    }\\n    function supply_at(Point memory p, uint256 t) internal view returns (uint256){\\n        //some code and actual rerurn is not 1\\n        return 1;    \\n    }\\n    function totalSupply(uint256 t) external view returns (uint256){\\n        uint256 t = block.timestamp;\\n        //some code and actual rerurn is not 1\\n        return 1;    \\n    }\\n    function totalSupplyAt(uint256 _block) external view returns (uint256){\\n        /**\\n        @notice Calculate total voting power at some point in the past\\n        @param _block Block to calculate the total voting power at\\n        @return Total voting power at `_block`\\n        */\\n\\n        require(_block <= block.number, \\\"_block > block.number\\\");\\n        uint256 _epoch = epoch;\\n        uint256 target_epoch = find_block_epoch(_block, _epoch);\\n\\n        Point memory point = point_history[target_epoch];\\n        uint256 dt = 0;\\n        if (target_epoch < _epoch){\\n            Point memory point_next = point_history[target_epoch + 1];\\n            if (point.blk != point_next.blk){\\n                dt = (_block - point.blk) * (point_next.ts - point.ts) / (point_next.blk - point.blk);\\n            }\\n        }else{\\n            if (point.blk != block.number){\\n                dt = (_block - point.blk) * (block.timestamp - point.ts) / (block.number - point.blk);\\n            }\\n        }\\n        // Now dt contains info on how far are we beyond point\\n\\n        return supply_at(point, point.ts + dt);\\n\\n        //some code and actual return is not 1\\n        // return 1; \\n    }\\n\\n}\\n\\n\\n\",\"keccak256\":\"0x8df5e59256315fba846eed57deb168b84647d02ddae6bfae3dc7a4cf66ae6653\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        },
        "veBalMock": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token_addr",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_symbol",
                  "type": "string"
                },
                {
                  "internalType": "address",
                  "name": "_authorizer_adaptor",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "locktime",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "int128",
                  "name": "type_",
                  "type": "int128"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ts",
                  "type": "uint256"
                }
              ],
              "name": "Deposit",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "prevSupply",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "supply",
                  "type": "uint256"
                }
              ],
              "name": "Supply",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "provider",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "ts",
                  "type": "uint256"
                }
              ],
              "name": "Withdraw",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "NAME",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "SYMBOL",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "admin",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "apply_smart_wallet_checker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_t",
                  "type": "uint256"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_block",
                  "type": "uint256"
                }
              ],
              "name": "balanceOfAt",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "checkpoint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "name": "commit_smart_wallet_checker",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokens",
                  "type": "uint256"
                }
              ],
              "name": "create_lock",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "deposit_for",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "epoch",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "future_smart_wallet_checker",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                }
              ],
              "name": "get_last_user_slope",
              "outputs": [
                {
                  "internalType": "int128",
                  "name": "",
                  "type": "int128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "increase_amount",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_unlock_time",
                  "type": "uint256"
                }
              ],
              "name": "increase_unlock_time",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "locked",
              "outputs": [
                {
                  "internalType": "int128",
                  "name": "amount",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "end",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "locked__end",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "point_history",
              "outputs": [
                {
                  "internalType": "int128",
                  "name": "bias",
                  "type": "int128"
                },
                {
                  "internalType": "int128",
                  "name": "slope",
                  "type": "int128"
                },
                {
                  "internalType": "uint256",
                  "name": "ts",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "blk",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "slope_changes",
              "outputs": [
                {
                  "internalType": "int128",
                  "name": "",
                  "type": "int128"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "smart_wallet_checker",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "t",
                  "type": "uint256"
                }
              ],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_block",
                  "type": "uint256"
                }
              ],
              "name": "totalSupplyAt",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "user_point_epoch",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_idx",
                  "type": "uint256"
                }
              ],
              "name": "user_point_history__ts",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_18": {
                  "entryPoint": null,
                  "id": 18,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_278": {
                  "entryPoint": null,
                  "id": 278,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "abi_decode_address_fromMemory": {
                  "entryPoint": 610,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_string_fromMemory": {
                  "entryPoint": 661,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_address_fromMemory": {
                  "entryPoint": 844,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 988,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_822a7c523e9311ee43723c99c74db16a4f1c0fb4496e4a102d0ad52c174be22e__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_d247a43705e5c881f3262122c853604f0c71693d6fc4bfb408c0c42bb4b2caad__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 1014,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 639,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3425:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "74:117:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "84:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "99:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "93:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "93:13:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "84:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "169:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "178:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "181:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "171:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "171:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "171:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "128:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "139:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "154:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "159:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "150:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "150:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "163:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "146:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "146:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "135:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "135:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "125:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "125:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "118:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "118:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "115:70:2"
                            }
                          ]
                        },
                        "name": "abi_decode_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "53:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:2",
                            "type": ""
                          }
                        ],
                        "src": "14:177:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "228:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "245:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "252:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "257:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "248:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "248:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "238:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "238:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "238:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "285:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "288:4:2",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "278:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "278:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "278:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "309:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "312:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "302:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "302:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "302:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "196:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "392:821:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "441:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "450:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "453:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "443:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "443:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "443:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "420:6:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "428:4:2",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "416:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "416:17:2"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "435:3:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "412:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "412:27:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "405:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "405:35:2"
                              },
                              "nodeType": "YulIf",
                              "src": "402:55:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "466:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "482:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "476:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "476:13:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "470:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "498:28:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "516:2:2",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "520:1:2",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "512:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "512:10:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "524:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "508:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "508:18:2"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "502:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "549:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "551:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "551:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "551:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "541:2:2"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "545:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "538:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "538:10:2"
                              },
                              "nodeType": "YulIf",
                              "src": "535:36:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "580:17:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "594:2:2",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "590:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "590:7:2"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "584:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "606:23:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "626:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "620:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "620:9:2"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "610:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "638:71:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "660:6:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "684:2:2"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "688:4:2",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "680:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "680:13:2"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "695:2:2"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "676:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "676:22:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "700:2:2",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "672:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "672:31:2"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "705:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "668:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "668:40:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "656:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "656:53:2"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "642:10:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "768:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "770:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "770:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "770:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "727:10:2"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "739:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "724:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "724:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "747:10:2"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "759:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "744:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "744:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "721:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "721:46:2"
                              },
                              "nodeType": "YulIf",
                              "src": "718:72:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "806:2:2",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "810:10:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "799:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "799:22:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "799:22:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "837:6:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "845:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "830:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "830:18:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "830:18:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "857:14:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "867:4:2",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "861:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "917:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "926:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "929:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "919:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "919:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "919:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "894:6:2"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "902:2:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "890:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "890:15:2"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "907:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "886:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "886:24:2"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "912:3:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "883:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "883:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "880:53:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "942:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "951:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "946:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1007:87:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1036:6:2"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1044:1:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1032:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1032:14:2"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "1048:2:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1028:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1028:23:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "offset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1067:6:2"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1075:1:2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1063:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "1063:14:2"
                                                },
                                                {
                                                  "name": "_4",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1079:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1059:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1059:23:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1053:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1053:30:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1021:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1021:63:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1021:63:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "972:1:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "975:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "969:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "969:9:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "979:19:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "981:15:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "990:1:2"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "993:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "986:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "986:10:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "981:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "965:3:2",
                                "statements": []
                              },
                              "src": "961:133:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1124:59:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1153:6:2"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1161:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1149:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1149:15:2"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "1166:2:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1145:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1145:24:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1171:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1138:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1138:35:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1138:35:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1109:1:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1112:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1106:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1106:9:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1103:80:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1192:15:2",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1201:6:2"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "1192:5:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "366:6:2",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "374:3:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "382:5:2",
                            "type": ""
                          }
                        ],
                        "src": "328:885:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1370:581:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1417:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1426:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1429:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1419:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1419:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1419:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1391:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1400:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1387:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1387:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1412:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1383:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1383:33:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1380:53:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1442:50:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1482:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1452:29:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1452:40:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1442:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1501:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1525:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1536:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1521:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1521:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1515:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1515:25:2"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1505:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1549:28:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1567:2:2",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1571:1:2",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1563:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1563:10:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1575:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1559:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1559:18:2"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1553:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1604:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1613:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1616:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1606:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1606:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1606:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1592:6:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1600:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1589:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1589:14:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1586:34:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1629:71:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1672:9:2"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1683:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1668:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1668:22:2"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1692:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1639:28:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1639:61:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1629:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1709:41:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1735:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1746:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1731:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1731:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1725:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1725:25:2"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1713:8:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1779:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1788:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1791:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1781:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1781:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1781:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1765:8:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1775:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1762:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1762:16:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1759:36:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1804:73:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1847:9:2"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1858:8:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1843:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1843:24:2"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1869:7:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1814:28:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1814:63:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1804:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1886:59:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1930:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1941:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1926:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1926:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1896:29:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1896:49:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1886:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1312:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1323:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1335:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1343:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "1351:6:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "1359:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1218:733:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2130:234:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2147:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2158:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2140:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2140:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2140:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2181:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2192:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2177:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2177:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2197:2:2",
                                    "type": "",
                                    "value": "44"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2170:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2170:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2170:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2220:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2231:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2216:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2216:18:2"
                                  },
                                  {
                                    "hexValue": "42616c4d6f636b3a205f617574686f72697a65725f61646170746f72203d3d20",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2236:34:2",
                                    "type": "",
                                    "value": "BalMock: _authorizer_adaptor == "
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2209:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2209:62:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2209:62:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2291:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2302:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2287:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2287:18:2"
                                  },
                                  {
                                    "hexValue": "5a45524f5f41444452455353",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2307:14:2",
                                    "type": "",
                                    "value": "ZERO_ADDRESS"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2280:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2280:42:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2280:42:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2331:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2343:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2354:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2339:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2339:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2331:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d247a43705e5c881f3262122c853604f0c71693d6fc4bfb408c0c42bb4b2caad__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2107:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2121:4:2",
                            "type": ""
                          }
                        ],
                        "src": "1956:408:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2401:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2418:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2425:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2430:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "2421:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2421:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2411:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2411:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2411:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2458:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2461:4:2",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2451:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2451:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2451:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2482:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2485:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2475:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2475:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2475:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2369:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2582:103:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2628:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2637:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2640:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2630:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2630:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2630:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2603:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2612:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2599:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2599:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2624:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2595:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2595:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2592:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2653:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2669:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2663:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2663:16:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2653:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2548:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2559:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2571:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2501:184:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2864:174:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2881:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2892:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2874:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2874:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2874:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2915:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2926:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2911:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2911:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2931:2:2",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2904:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2904:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2904:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2954:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2965:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2950:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2950:18:2"
                                  },
                                  {
                                    "hexValue": "42616c4d6f636b3a205f646563696d616c73203e20323535",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2970:26:2",
                                    "type": "",
                                    "value": "BalMock: _decimals > 255"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2943:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2943:54:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2943:54:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3006:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3018:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3029:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3014:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3014:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3006:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_822a7c523e9311ee43723c99c74db16a4f1c0fb4496e4a102d0ad52c174be22e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2841:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2855:4:2",
                            "type": ""
                          }
                        ],
                        "src": "2690:348:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3098:325:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3108:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3122:1:2",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "3125:4:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3118:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3118:12:2"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "3108:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3139:38:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "3169:4:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3175:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3165:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3165:12:2"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "3143:18:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3216:31:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3218:27:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "3232:6:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3240:4:2",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "3228:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3228:17:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3218:6:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "3196:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3189:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3189:26:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3186:61:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3306:111:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3327:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3334:3:2",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3339:10:2",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "3330:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3330:20:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3320:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3320:31:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3320:31:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3371:1:2",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3374:4:2",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3364:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3364:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3364:15:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3399:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3402:4:2",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3392:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3392:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3392:15:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "3262:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3285:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3293:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3282:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3282:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "3259:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3259:38:2"
                              },
                              "nodeType": "YulIf",
                              "src": "3256:161:2"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "3078:4:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3087:6:2",
                            "type": ""
                          }
                        ],
                        "src": "3043:380:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        let offset := mload(add(headStart, 32))\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n    function abi_encode_tuple_t_stringliteral_d247a43705e5c881f3262122c853604f0c71693d6fc4bfb408c0c42bb4b2caad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"BalMock: _authorizer_adaptor == \")\n        mstore(add(headStart, 96), \"ZERO_ADDRESS\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_822a7c523e9311ee43723c99c74db16a4f1c0fb4496e4a102d0ad52c174be22e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"BalMock: _decimals > 255\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60e06040523480156200001157600080fd5b50604051620010cb380380620010cb83398101604081905262000034916200034c565b60016000556001600160a01b038116620000aa5760405162461bcd60e51b815260206004820152602c60248201527f42616c4d6f636b3a205f617574686f72697a65725f61646170746f72203d3d2060448201526b5a45524f5f4144445245535360a01b60648201526084015b60405180910390fd5b6001600160a01b03848116608081905290821660a05243600955426008556040805163313ce56760e01b815290516000929163313ce5679160048083019260209291908290030181865afa15801562000107573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200012d9190620003dc565b905060ff811115620001825760405162461bcd60e51b815260206004820152601860248201527f42616c4d6f636b3a205f646563696d616c73203e2032353500000000000000006044820152606401620000a1565b835162000197906001906020870190620001bc565b508251620001ad906002906020860190620001bc565b5060c052506200043292505050565b828054620001ca90620003f6565b90600052602060002090601f016020900481019282620001ee576000855562000239565b82601f106200020957805160ff191683800117855562000239565b8280016001018555821562000239579182015b82811115620002395782518255916020019190600101906200021c565b50620002479291506200024b565b5090565b5b808211156200024757600081556001016200024c565b80516001600160a01b03811681146200027a57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002a757600080fd5b81516001600160401b0380821115620002c457620002c46200027f565b604051601f8301601f19908116603f01168101908282118183101715620002ef57620002ef6200027f565b816040528381526020925086838588010111156200030c57600080fd5b600091505b8382101562000330578582018301518183018401529082019062000311565b83821115620003425760008385830101525b9695505050505050565b600080600080608085870312156200036357600080fd5b6200036e8562000262565b60208601519094506001600160401b03808211156200038c57600080fd5b6200039a8883890162000295565b94506040870151915080821115620003b157600080fd5b50620003c08782880162000295565b925050620003d16060860162000262565b905092959194509250565b600060208284031215620003ef57600080fd5b5051919050565b600181811c908216806200040b57607f821691505b6020821081036200042c57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c051610c6962000462600039600061023f0152600061045b015260006104810152610c696000f3fe608060405234801561001057600080fd5b50600436106101ce5760003560e01c8063900cf0cf11610104578063cbf9fe5f116100a2578063f76f8d7811610071578063f76f8d7814610451578063f851a44014610459578063fc0c546a1461047f578063ffc9514d146104a557600080fd5b8063cbf9fe5f146103bb578063d1febfb914610403578063da020a181461043e578063eff7a6121461028057600080fd5b8063a3f4df7e116100de578063a3f4df7e14610373578063adc635891461037b578063bd85b039146103a7578063c2c4c5c11461027657600080fd5b8063900cf0cf1461034f57806395d89b4114610358578063981b24d01461036057600080fd5b80634ee2cd7e116101715780637175d4f71161014b5780637175d4f7146102e65780637c74a1741461031d5780638e5b490f146102765780638ff36fd11461033057600080fd5b80634ee2cd7e146101d357806357f901e21461029357806371197484146102a457600080fd5b8063313ce567116101ad578063313ce5671461023d5780633a46273e146102635780633ccfd60b146102785780634957677c1461028057600080fd5b8062fdd58e146101d3578063010ae757146101fc57806306fdde0314610228575b600080fd5b6101e96101e1366004610a6c565b600192915050565b6040519081526020015b60405180910390f35b6101e961020a366004610a96565b6c03c95a2f0b4856475fe00000086020526000908152604090205481565b6102306104b8565b6040516101f39190610ab8565b7f00000000000000000000000000000000000000000000000000000000000000006101e9565b610276610271366004610a6c565b61054a565b005b61027661058d565b61027661028e366004610b0d565b6105b6565b6102766102a1366004610a96565b50565b6102d36102b2366004610b0d565b6c03c95a2f0b4856475fe000000960205260009081526040902054600f0b81565b604051600f9190910b81526020016101f3565b6c03c95a2f0b4856475fe000000b54610305906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6102d361032b366004610a96565b6105e0565b6c03c95a2f0b4856475fe000000a54610305906001600160a01b031681565b6101e960065481565b610230610645565b6101e961036e366004610b0d565b610654565b61023061081d565b6101e9610389366004610a96565b6001600160a01b031660009081526005602052604090206001015490565b6101e96103b5366004610b0d565b50600190565b6103e96103c9366004610a96565b60056020526000908152604090208054600190910154600f9190910b9082565b60408051600f9390930b83526020830191909152016101f3565b610416610411366004610b0d565b6108ab565b60408051600f95860b81529390940b60208401529282015260608101919091526080016101f3565b6101e961044c366004610a6c565b6108ef565b610230610937565b7f0000000000000000000000000000000000000000000000000000000000000000610305565b7f0000000000000000000000000000000000000000000000000000000000000000610305565b6102766104b3366004610b0d565b610944565b6060600180546104c790610b26565b80601f01602080910402602001604051908101604052809291908181526020018280546104f390610b26565b80156105405780601f1061051557610100808354040283529160200191610540565b820191906000526020600020905b81548152906001019060200180831161052357829003601f168201915b5050505050905090565b6002600054036105755760405162461bcd60e51b815260040161056c90610b60565b60405180910390fd5b60026000556105848282610971565b50506001600055565b6002600054036105af5760405162461bcd60e51b815260040161056c90610b60565b6001600055565b6002600054036105d85760405162461bcd60e51b815260040161056c90610b60565b506001600055565b6001600160a01b03811660009081526c03c95a2f0b4856475fe000000860209081526040808320546c03c95a2f0b4856475fe0000007909252822081633b9aca00811061062f5761062f610b97565b6003020154600160801b9004600f0b9392505050565b6060600280546104c790610b26565b60004382111561069e5760405162461bcd60e51b81526020600482015260156024820152742fb13637b1b5901f10313637b1b597373ab6b132b960591b604482015260640161056c565b60065460408051608081018252600754600f81810b8352600160801b909104900b60208201526008549181019190915260095460608201526000908183156107b057600060076106ef856001610bc3565b6c01431e0fae6d7217caa0000000811061070b5761070b610b97565b60408051608081018252600392909202929092018054600f81810b8452600160801b909104900b60208301526001810154928201929092526002909101546060808301829052850151919250146107aa57826060015181606001516107709190610bdb565b836040015182604001516107849190610bdb565b6060850151610793908a610bdb565b61079d9190610bf2565b6107a79190610c11565b91505b506107ff565b438260600151146107ff5760608201516107ca9043610bdb565b60408301516107d99042610bdb565b60608401516107e89089610bdb565b6107f29190610bf2565b6107fc9190610c11565b90505b610813828284604001516101e19190610bc3565b9695505050505050565b6001805461082a90610b26565b80601f016020809104026020016040519081016040528092919081815260200182805461085690610b26565b80156108a35780601f10610878576101008083540402835291602001916108a3565b820191906000526020600020905b81548152906001019060200180831161088657829003601f168201915b505050505081565b6007816c01431e0fae6d7217caa000000081106108c757600080fd5b6003020180546001820154600290920154600f82810b9450600160801b90920490910b919084565b6001600160a01b03821660009081526c03c95a2f0b4856475fe00000076020526040812082633b9aca00811061092757610927610b97565b6003020160010154905092915050565b6002805461082a90610b26565b6002600054036109665760405162461bcd60e51b815260040161056c90610b60565b60026000556105d833825b6001600160a01b0382166109c75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161056c565b80600460008282546109d99190610bc3565b90915550506001600160a01b03821660009081526003602052604081208054839290610a06908490610bc3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610a6757600080fd5b919050565b60008060408385031215610a7f57600080fd5b610a8883610a50565b946020939093013593505050565b600060208284031215610aa857600080fd5b610ab182610a50565b9392505050565b600060208083528351808285015260005b81811015610ae557858101830151858201604001528201610ac9565b81811115610af7576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610b1f57600080fd5b5035919050565b600181811c90821680610b3a57607f821691505b602082108103610b5a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610bd657610bd6610bad565b500190565b600082821015610bed57610bed610bad565b500390565b6000816000190483118215151615610c0c57610c0c610bad565b500290565b600082610c2e57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122013306a1025ac0f7d78c76b209a0d79401201ddc2f7241b10d40c3a21e5ee547464736f6c634300080d0033",
              "opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x10CB CODESIZE SUB DUP1 PUSH3 0x10CB DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x34C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0xAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C4D6F636B3A205F617574686F72697A65725F61646170746F72203D3D20 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x5A45524F5F41444452455353 PUSH1 0xA0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x80 DUP2 SWAP1 MSTORE SWAP1 DUP3 AND PUSH1 0xA0 MSTORE NUMBER PUSH1 0x9 SSTORE TIMESTAMP PUSH1 0x8 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x107 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x12D SWAP2 SWAP1 PUSH3 0x3DC JUMP JUMPDEST SWAP1 POP PUSH1 0xFF DUP2 GT ISZERO PUSH3 0x182 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616C4D6F636B3A205F646563696D616C73203E203235350000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0xA1 JUMP JUMPDEST DUP4 MLOAD PUSH3 0x197 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP8 ADD SWAP1 PUSH3 0x1BC JUMP JUMPDEST POP DUP3 MLOAD PUSH3 0x1AD SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP7 ADD SWAP1 PUSH3 0x1BC JUMP JUMPDEST POP PUSH1 0xC0 MSTORE POP PUSH3 0x432 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1CA SWAP1 PUSH3 0x3F6 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1EE JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x239 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x209 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x239 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x239 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x239 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x21C JUMP JUMPDEST POP PUSH3 0x247 SWAP3 SWAP2 POP PUSH3 0x24B JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x247 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x24C JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x27A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x2C4 JUMPI PUSH3 0x2C4 PUSH3 0x27F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x2EF JUMPI PUSH3 0x2EF PUSH3 0x27F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x330 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x311 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x342 JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x36E DUP6 PUSH3 0x262 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x38C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x39A DUP9 DUP4 DUP10 ADD PUSH3 0x295 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x3C0 DUP8 DUP3 DUP9 ADD PUSH3 0x295 JUMP JUMPDEST SWAP3 POP POP PUSH3 0x3D1 PUSH1 0x60 DUP7 ADD PUSH3 0x262 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x40B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x42C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0xC69 PUSH3 0x462 PUSH1 0x0 CODECOPY PUSH1 0x0 PUSH2 0x23F ADD MSTORE PUSH1 0x0 PUSH2 0x45B ADD MSTORE PUSH1 0x0 PUSH2 0x481 ADD MSTORE PUSH2 0xC69 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900CF0CF GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCBF9FE5F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF76F8D78 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0xFFC9514D EQ PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBF9FE5F EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD1FEBFB9 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xDA020A18 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xEFF7A612 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3F4DF7E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xADC63589 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xC2C4C5C1 EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EE2CD7E GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x7175D4F7 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x7175D4F7 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x7C74A174 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x8E5B490F EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x8FF36FD1 EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x57F901E2 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x71197484 EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x3A46273E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x4957677C EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x10AE757 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE0000008 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x276 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE0000009 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE000000B SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE000000A SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x81D JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x416 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP6 DUP7 SIGNEXTEND DUP2 MSTORE SWAP4 SWAP1 SWAP5 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x230 PUSH2 0x937 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x305 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x305 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F3 SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x540 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x515 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x540 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x523 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x584 DUP3 DUP3 PUSH2 0x971 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH13 0x3C95A2F0B4856475FE0000008 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH13 0x3C95A2F0B4856475FE0000007 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 PUSH4 0x3B9ACA00 DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62F PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x3 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 GT ISZERO PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2FB13637B1B5901F10313637B1B597373AB6B132B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP4 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x8 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x9 SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 DUP4 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH2 0x6EF DUP6 PUSH1 0x1 PUSH2 0xBC3 JUMP JUMPDEST PUSH13 0x1431E0FAE6D7217CAA0000000 DUP2 LT PUSH2 0x70B JUMPI PUSH2 0x70B PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP6 ADD MLOAD SWAP2 SWAP3 POP EQ PUSH2 0x7AA JUMPI DUP3 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x793 SWAP1 DUP11 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x79D SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x7FF JUMP JUMPDEST NUMBER DUP3 PUSH1 0x60 ADD MLOAD EQ PUSH2 0x7FF JUMPI PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x7CA SWAP1 NUMBER PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x7D9 SWAP1 TIMESTAMP PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x7E8 SWAP1 DUP10 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x813 DUP3 DUP3 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x82A SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x856 SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x878 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x886 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH13 0x1431E0FAE6D7217CAA0000000 DUP2 LT PUSH2 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xF DUP3 DUP2 SIGNEXTEND SWAP5 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 SIGNEXTEND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH13 0x3C95A2F0B4856475FE0000007 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 PUSH4 0x3B9ACA00 DUP2 LT PUSH2 0x927 JUMPI PUSH2 0x927 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x82A SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x5D8 CALLER DUP3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA06 SWAP1 DUP5 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA88 DUP4 PUSH2 0xA50 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB1 DUP3 PUSH2 0xA50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAE5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAC9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB5A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0xBAD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xBAD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC0C JUMPI PUSH2 0xC0C PUSH2 0xBAD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT ADDRESS PUSH11 0x1025AC0F7D78C76B209A0D PUSH26 0x401201DDC2F7241B10D40C3A21E5EE547464736F6C634300080D STOP CALLER ",
              "sourceMap": "1152:10813:1:-:0;;;3474:923;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;-1:-1:-1;;;;;3930:35:1;;3922:92;;;;-1:-1:-1;;;3922:92:1;;2158:2:2;3922:92:1;;;2140:21:2;2197:2;2177:18;;;2170:30;2236:34;2216:18;;;2209:62;-1:-1:-1;;;2287:18:2;;;2280:42;2339:19;;3922:92:1;;;;;;;;;-1:-1:-1;;;;;4025:18:1;;;;;;;4053:40;;;;;4126:12;4103:20;:35;4170:15;4148:19;:37;4216:32;;;-1:-1:-1;;;4216:32:1;;;;4117:1;;4025:18;4216:30;;:32;;;;;;;;;;;;;;4025:18;4216:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4196:52;;4279:3;4266:9;:16;;4258:53;;;;-1:-1:-1;;;4258:53:1;;2892:2:2;4258:53:1;;;2874:21:2;2931:2;2911:18;;;2904:30;2970:26;2950:18;;;2943:54;3014:18;;4258:53:1;2690:348:2;4258:53:1;4322:12;;;;:4;;:12;;;;;:::i;:::-;-1:-1:-1;4344:16:1;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;4370:20:1;;-1:-1:-1;1152:10813:1;;-1:-1:-1;;;1152:10813:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1152:10813:1;;;-1:-1:-1;1152:10813:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:2;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:2;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:2;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:2:o;1218:733::-;1335:6;1343;1351;1359;1412:3;1400:9;1391:7;1387:23;1383:33;1380:53;;;1429:1;1426;1419:12;1380:53;1452:40;1482:9;1452:40;:::i;:::-;1536:2;1521:18;;1515:25;1442:50;;-1:-1:-1;;;;;;1589:14:2;;;1586:34;;;1616:1;1613;1606:12;1586:34;1639:61;1692:7;1683:6;1672:9;1668:22;1639:61;:::i;:::-;1629:71;;1746:2;1735:9;1731:18;1725:25;1709:41;;1775:2;1765:8;1762:16;1759:36;;;1791:1;1788;1781:12;1759:36;;1814:63;1869:7;1858:8;1847:9;1843:24;1814:63;:::i;:::-;1804:73;;;1896:49;1941:2;1930:9;1926:18;1896:49;:::i;:::-;1886:59;;1218:733;;;;;;;:::o;2501:184::-;2571:6;2624:2;2612:9;2603:7;2599:23;2595:32;2592:52;;;2640:1;2637;2630:12;2592:52;-1:-1:-1;2663:16:2;;2501:184;-1:-1:-1;2501:184:2:o;3043:380::-;3122:1;3118:12;;;;3165;;;3186:61;;3240:4;3232:6;3228:17;3218:27;;3186:61;3293:2;3285:6;3282:14;3262:18;3259:38;3256:161;;3339:10;3334:3;3330:20;3327:1;3320:31;3374:4;3371:1;3364:15;3402:4;3399:1;3392:15;3256:161;;3043:380;;;:::o;:::-;1152:10813:1;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@NAME_167": {
                  "entryPoint": 2077,
                  "id": 167,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@SYMBOL_169": {
                  "entryPoint": 2359,
                  "id": 169,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_afterTokenTransfer_414": {
                  "entryPoint": null,
                  "id": 414,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_beforeTokenTransfer_404": {
                  "entryPoint": null,
                  "id": 404,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_mint_469": {
                  "entryPoint": 2417,
                  "id": 469,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@admin_318": {
                  "entryPoint": null,
                  "id": 318,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@apply_smart_wallet_checker_328": {
                  "entryPoint": null,
                  "id": 328,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@balanceOfAt_669": {
                  "entryPoint": null,
                  "id": 669,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_657": {
                  "entryPoint": null,
                  "id": 657,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@checkpoint_500": {
                  "entryPoint": null,
                  "id": 500,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@commit_smart_wallet_checker_324": {
                  "entryPoint": null,
                  "id": 324,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@create_lock_529": {
                  "entryPoint": 2372,
                  "id": 529,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@decimals_310": {
                  "entryPoint": null,
                  "id": 310,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@deposit_for_515": {
                  "entryPoint": 1354,
                  "id": 515,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@epoch_184": {
                  "entryPoint": null,
                  "id": 184,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@find_block_epoch_572": {
                  "entryPoint": null,
                  "id": 572,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@future_smart_wallet_checker_206": {
                  "entryPoint": null,
                  "id": 206,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@get_last_user_slope_356": {
                  "entryPoint": 1504,
                  "id": 356,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@increase_amount_537": {
                  "entryPoint": 1462,
                  "id": 537,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@increase_unlock_time_545": {
                  "entryPoint": null,
                  "id": 545,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@locked_182": {
                  "entryPoint": null,
                  "id": 182,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@locked__end_386": {
                  "entryPoint": null,
                  "id": 386,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@name_294": {
                  "entryPoint": 1208,
                  "id": 294,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@point_history_189": {
                  "entryPoint": 2219,
                  "id": 189,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@slope_changes_204": {
                  "entryPoint": null,
                  "id": 204,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@smart_wallet_checker_208": {
                  "entryPoint": null,
                  "id": 208,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@supply_at_682": {
                  "entryPoint": null,
                  "id": 682,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@symbol_302": {
                  "entryPoint": 1605,
                  "id": 302,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@token_286": {
                  "entryPoint": null,
                  "id": 286,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupplyAt_816": {
                  "entryPoint": 1620,
                  "id": 816,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@totalSupply_697": {
                  "entryPoint": null,
                  "id": 697,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@user_point_epoch_200": {
                  "entryPoint": null,
                  "id": 200,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@user_point_history__ts_373": {
                  "entryPoint": 2287,
                  "id": 373,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@withdraw_551": {
                  "entryPoint": 1421,
                  "id": 551,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 2640,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 2710,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 2668,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 2829,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_int128_t_int128_t_uint256_t_uint256__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_int128_t_uint256__to_t_int128_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2744,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_e06eab2c638194ae486c50289bc5ae37f128838fd4603865501db43825f4541b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 2912,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 3011,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 3089,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 3058,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 3035,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_byte_array_length": {
                  "entryPoint": 2854,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 2989,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 2967,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:5080:2",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:2",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:2"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:2",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:2",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:2"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:2"
                              },
                              "nodeType": "YulIf",
                              "src": "111:70:2"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:2",
                            "type": ""
                          }
                        ],
                        "src": "14:173:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "279:167:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "325:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "334:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "337:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "327:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "327:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "327:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "300:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "309:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "296:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "296:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "321:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "292:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "292:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "289:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "350:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "379:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "360:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "360:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "350:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "398:42:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "425:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "436:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "421:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "421:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "408:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "408:32:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "398:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "237:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "248:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "260:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "268:6:2",
                            "type": ""
                          }
                        ],
                        "src": "192:254:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "552:76:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "562:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "574:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "585:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "570:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "570:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "562:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "604:9:2"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "615:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "597:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "597:25:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "597:25:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "521:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "532:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "543:4:2",
                            "type": ""
                          }
                        ],
                        "src": "451:177:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "703:116:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "749:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "758:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "761:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "751:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "751:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "751:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "724:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "733:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "720:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "720:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "745:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "716:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "716:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "713:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "774:39:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "803:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "784:18:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "784:29:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "774:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "669:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "680:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "692:6:2",
                            "type": ""
                          }
                        ],
                        "src": "633:186:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "945:476:2",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "955:12:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "965:2:2",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "959:2:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "983:9:2"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "994:2:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "976:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "976:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "976:21:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1006:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1026:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1020:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1020:13:2"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1010:6:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1053:9:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1064:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1049:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1049:18:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1069:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1042:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1042:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1042:34:2"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1085:10:2",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1094:1:2",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1089:1:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1154:90:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1183:9:2"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1194:1:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1179:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1179:17:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1198:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1175:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1175:26:2"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1217:6:2"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1225:1:2"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1213:3:2"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "1213:14:2"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1229:2:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1209:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1209:23:2"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1203:5:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1203:30:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1168:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1168:66:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1168:66:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1115:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1118:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1112:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1112:13:2"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1126:19:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1128:15:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1137:1:2"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1140:2:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1133:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1133:10:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1128:1:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1108:3:2",
                                "statements": []
                              },
                              "src": "1104:140:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1278:66:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1307:9:2"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1318:6:2"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1303:3:2"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1303:22:2"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1327:2:2",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1299:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1299:31:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1332:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1292:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1292:42:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1292:42:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1259:1:2"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1262:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1256:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1253:91:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1353:62:2",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1369:9:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "1388:6:2"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1396:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "1384:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1384:15:2"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1405:2:2",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "1401:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1401:7:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "1380:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1380:29:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1365:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1365:45:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1412:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1361:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1361:54:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1353:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "914:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "925:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "936:4:2",
                            "type": ""
                          }
                        ],
                        "src": "824:597:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1496:110:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1542:16:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1551:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1554:1:2",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1544:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1544:12:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1544:12:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1517:7:2"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1526:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1513:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1513:23:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1538:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1509:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1509:32:2"
                              },
                              "nodeType": "YulIf",
                              "src": "1506:52:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1567:33:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1590:9:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1577:12:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1577:23:2"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1567:6:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1462:9:2",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1473:7:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1485:6:2",
                            "type": ""
                          }
                        ],
                        "src": "1426:180:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1710:92:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1720:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1732:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1743:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1728:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1728:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1720:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1762:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1784:2:2",
                                        "type": "",
                                        "value": "15"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1788:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "signextend",
                                      "nodeType": "YulIdentifier",
                                      "src": "1773:10:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1773:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1755:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1755:41:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1755:41:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1679:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1690:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1701:4:2",
                            "type": ""
                          }
                        ],
                        "src": "1611:191:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1908:102:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1918:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1930:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1941:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1926:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1926:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1918:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1960:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1975:6:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1991:3:2",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1996:1:2",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "1987:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1987:11:2"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2000:1:2",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "1983:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1983:19:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1971:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1971:32:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1953:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1953:51:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1953:51:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1877:9:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1888:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1899:4:2",
                            "type": ""
                          }
                        ],
                        "src": "1807:203:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2142:135:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2152:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2164:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2175:2:2",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2160:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2160:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2152:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2194:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2216:2:2",
                                        "type": "",
                                        "value": "15"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2220:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "signextend",
                                      "nodeType": "YulIdentifier",
                                      "src": "2205:10:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2205:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2187:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2187:41:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2187:41:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2248:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2259:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2244:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2244:18:2"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2264:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2237:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2237:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2237:34:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int128_t_uint256__to_t_int128_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2103:9:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2114:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2122:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2133:4:2",
                            "type": ""
                          }
                        ],
                        "src": "2015:262:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2463:238:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2473:27:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2485:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2496:3:2",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2481:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2481:19:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2473:4:2"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2516:9:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2538:2:2",
                                        "type": "",
                                        "value": "15"
                                      },
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2542:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "signextend",
                                      "nodeType": "YulIdentifier",
                                      "src": "2527:10:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2527:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2509:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2509:41:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2509:41:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2570:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2581:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2566:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2566:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2597:2:2",
                                        "type": "",
                                        "value": "15"
                                      },
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2601:6:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "signextend",
                                      "nodeType": "YulIdentifier",
                                      "src": "2586:10:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2586:22:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2559:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2559:50:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2559:50:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2629:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2640:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2625:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2625:18:2"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "2645:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2618:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2618:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2618:34:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2672:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2683:2:2",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2668:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2668:18:2"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2688:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2661:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2661:34:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2661:34:2"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_int128_t_int128_t_uint256_t_uint256__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2408:9:2",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "2419:6:2",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2427:6:2",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2435:6:2",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2443:6:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2454:4:2",
                            "type": ""
                          }
                        ],
                        "src": "2282:419:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2761:325:2",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2771:22:2",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2785:1:2",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "2788:4:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "2781:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2781:12:2"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2771:6:2"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2802:38:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "2832:4:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2838:1:2",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2828:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2828:12:2"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "2806:18:2",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2879:31:2",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2881:27:2",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "2895:6:2"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2903:4:2",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "2891:3:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2891:17:2"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2881:6:2"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "2859:18:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2852:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2852:26:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2849:61:2"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2969:111:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2990:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2997:3:2",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "3002:10:2",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "2993:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2993:20:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2983:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2983:31:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2983:31:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3034:1:2",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3037:4:2",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3027:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3027:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3027:15:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3062:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3065:4:2",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3055:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3055:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3055:15:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "2925:18:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "2948:6:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2956:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "2945:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2945:14:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "2922:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2922:38:2"
                              },
                              "nodeType": "YulIf",
                              "src": "2919:161:2"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "2741:4:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "2750:6:2",
                            "type": ""
                          }
                        ],
                        "src": "2706:380:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3265:181:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3282:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3293:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3275:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3275:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3275:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3316:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3327:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3312:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3312:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3332:2:2",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3305:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3305:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3305:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3355:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3366:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3351:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3351:18:2"
                                  },
                                  {
                                    "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3371:33:2",
                                    "type": "",
                                    "value": "ReentrancyGuard: reentrant call"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3344:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3344:61:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3344:61:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3414:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3426:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3437:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3422:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3422:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3414:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3242:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3256:4:2",
                            "type": ""
                          }
                        ],
                        "src": "3091:355:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3483:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3500:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3507:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3512:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3503:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3503:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3493:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3493:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3493:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3540:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3543:4:2",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3533:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3533:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3533:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3564:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3567:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "3557:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3557:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3557:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3451:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3757:171:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3774:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3785:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3767:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3767:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3767:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3808:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3819:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3804:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3804:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3824:2:2",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3797:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3797:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3797:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3847:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3858:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3843:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3843:18:2"
                                  },
                                  {
                                    "hexValue": "5f626c6f636b203e20626c6f636b2e6e756d626572",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3863:23:2",
                                    "type": "",
                                    "value": "_block > block.number"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3836:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3836:51:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3836:51:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3896:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3908:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3919:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3904:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3904:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3896:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e06eab2c638194ae486c50289bc5ae37f128838fd4603865501db43825f4541b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3734:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3748:4:2",
                            "type": ""
                          }
                        ],
                        "src": "3583:345:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3965:95:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3982:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3989:3:2",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3994:10:2",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "3985:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3985:20:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3975:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3975:31:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3975:31:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4022:1:2",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4025:4:2",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4015:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4015:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4015:15:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4046:1:2",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4049:4:2",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "4039:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4039:15:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4039:15:2"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3933:127:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4113:80:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4140:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4142:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4142:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4142:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4129:1:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "4136:1:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4132:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4132:6:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4126:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4126:13:2"
                              },
                              "nodeType": "YulIf",
                              "src": "4123:39:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4171:16:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4182:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4185:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4178:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4178:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "4171:3:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4096:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4099:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "4105:3:2",
                            "type": ""
                          }
                        ],
                        "src": "4065:128:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4247:76:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4269:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4271:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4271:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4271:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4263:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4266:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4260:2:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4260:8:2"
                              },
                              "nodeType": "YulIf",
                              "src": "4257:34:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4300:17:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4312:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4315:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4308:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4308:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "4300:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4229:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4232:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "4238:4:2",
                            "type": ""
                          }
                        ],
                        "src": "4198:125:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4380:116:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4439:22:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4441:16:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4441:18:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4441:18:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "4411:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4404:6:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4404:9:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4397:6:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4397:17:2"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "4419:1:2"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4430:1:2",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "4426:3:2"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4426:6:2"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "4434:1:2"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "4422:3:2"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4422:14:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "4416:2:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4416:21:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4393:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4393:45:2"
                              },
                              "nodeType": "YulIf",
                              "src": "4390:71:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4470:20:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4485:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4488:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "4481:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4481:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "4470:7:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4359:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4362:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "4368:7:2",
                            "type": ""
                          }
                        ],
                        "src": "4328:168:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4547:171:2",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4578:111:2",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4599:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4606:3:2",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "4611:10:2",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "4602:3:2"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "4602:20:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4592:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4592:31:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4592:31:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4643:1:2",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4646:4:2",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "4636:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4636:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4636:15:2"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4671:1:2",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4674:4:2",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4664:6:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4664:15:2"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4664:15:2"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4567:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4560:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4560:9:2"
                              },
                              "nodeType": "YulIf",
                              "src": "4557:132:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4698:14:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4707:1:2"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "4710:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "4703:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4703:9:2"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "4698:1:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "4532:1:2",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "4535:1:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "4541:1:2",
                            "type": ""
                          }
                        ],
                        "src": "4501:217:2"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4897:181:2",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4914:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4925:2:2",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4907:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4907:21:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4907:21:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4948:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4959:2:2",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4944:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4944:18:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4964:2:2",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4937:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4937:30:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4937:30:2"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4987:9:2"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4998:2:2",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4983:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4983:18:2"
                                  },
                                  {
                                    "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5003:33:2",
                                    "type": "",
                                    "value": "ERC20: mint to the zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4976:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4976:61:2"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4976:61:2"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5046:26:2",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5058:9:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5069:2:2",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5054:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5054:18:2"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5046:4:2"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4874:9:2",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4888:4:2",
                            "type": ""
                          }
                        ],
                        "src": "4723:355:2"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_int128__to_t_int128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(15, value0))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_int128_t_uint256__to_t_int128_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, signextend(15, value0))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_int128_t_int128_t_uint256_t_uint256__to_t_int128_t_int128_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, signextend(15, value0))\n        mstore(add(headStart, 32), signextend(15, value1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_e06eab2c638194ae486c50289bc5ae37f128838fd4603865501db43825f4541b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"_block > block.number\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n}",
                  "id": 2,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {
                "163": [
                  {
                    "length": 32,
                    "start": 1153
                  }
                ],
                "165": [
                  {
                    "length": 32,
                    "start": 1115
                  }
                ],
                "171": [
                  {
                    "length": 32,
                    "start": 575
                  }
                ]
              },
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101ce5760003560e01c8063900cf0cf11610104578063cbf9fe5f116100a2578063f76f8d7811610071578063f76f8d7814610451578063f851a44014610459578063fc0c546a1461047f578063ffc9514d146104a557600080fd5b8063cbf9fe5f146103bb578063d1febfb914610403578063da020a181461043e578063eff7a6121461028057600080fd5b8063a3f4df7e116100de578063a3f4df7e14610373578063adc635891461037b578063bd85b039146103a7578063c2c4c5c11461027657600080fd5b8063900cf0cf1461034f57806395d89b4114610358578063981b24d01461036057600080fd5b80634ee2cd7e116101715780637175d4f71161014b5780637175d4f7146102e65780637c74a1741461031d5780638e5b490f146102765780638ff36fd11461033057600080fd5b80634ee2cd7e146101d357806357f901e21461029357806371197484146102a457600080fd5b8063313ce567116101ad578063313ce5671461023d5780633a46273e146102635780633ccfd60b146102785780634957677c1461028057600080fd5b8062fdd58e146101d3578063010ae757146101fc57806306fdde0314610228575b600080fd5b6101e96101e1366004610a6c565b600192915050565b6040519081526020015b60405180910390f35b6101e961020a366004610a96565b6c03c95a2f0b4856475fe00000086020526000908152604090205481565b6102306104b8565b6040516101f39190610ab8565b7f00000000000000000000000000000000000000000000000000000000000000006101e9565b610276610271366004610a6c565b61054a565b005b61027661058d565b61027661028e366004610b0d565b6105b6565b6102766102a1366004610a96565b50565b6102d36102b2366004610b0d565b6c03c95a2f0b4856475fe000000960205260009081526040902054600f0b81565b604051600f9190910b81526020016101f3565b6c03c95a2f0b4856475fe000000b54610305906001600160a01b031681565b6040516001600160a01b0390911681526020016101f3565b6102d361032b366004610a96565b6105e0565b6c03c95a2f0b4856475fe000000a54610305906001600160a01b031681565b6101e960065481565b610230610645565b6101e961036e366004610b0d565b610654565b61023061081d565b6101e9610389366004610a96565b6001600160a01b031660009081526005602052604090206001015490565b6101e96103b5366004610b0d565b50600190565b6103e96103c9366004610a96565b60056020526000908152604090208054600190910154600f9190910b9082565b60408051600f9390930b83526020830191909152016101f3565b610416610411366004610b0d565b6108ab565b60408051600f95860b81529390940b60208401529282015260608101919091526080016101f3565b6101e961044c366004610a6c565b6108ef565b610230610937565b7f0000000000000000000000000000000000000000000000000000000000000000610305565b7f0000000000000000000000000000000000000000000000000000000000000000610305565b6102766104b3366004610b0d565b610944565b6060600180546104c790610b26565b80601f01602080910402602001604051908101604052809291908181526020018280546104f390610b26565b80156105405780601f1061051557610100808354040283529160200191610540565b820191906000526020600020905b81548152906001019060200180831161052357829003601f168201915b5050505050905090565b6002600054036105755760405162461bcd60e51b815260040161056c90610b60565b60405180910390fd5b60026000556105848282610971565b50506001600055565b6002600054036105af5760405162461bcd60e51b815260040161056c90610b60565b6001600055565b6002600054036105d85760405162461bcd60e51b815260040161056c90610b60565b506001600055565b6001600160a01b03811660009081526c03c95a2f0b4856475fe000000860209081526040808320546c03c95a2f0b4856475fe0000007909252822081633b9aca00811061062f5761062f610b97565b6003020154600160801b9004600f0b9392505050565b6060600280546104c790610b26565b60004382111561069e5760405162461bcd60e51b81526020600482015260156024820152742fb13637b1b5901f10313637b1b597373ab6b132b960591b604482015260640161056c565b60065460408051608081018252600754600f81810b8352600160801b909104900b60208201526008549181019190915260095460608201526000908183156107b057600060076106ef856001610bc3565b6c01431e0fae6d7217caa0000000811061070b5761070b610b97565b60408051608081018252600392909202929092018054600f81810b8452600160801b909104900b60208301526001810154928201929092526002909101546060808301829052850151919250146107aa57826060015181606001516107709190610bdb565b836040015182604001516107849190610bdb565b6060850151610793908a610bdb565b61079d9190610bf2565b6107a79190610c11565b91505b506107ff565b438260600151146107ff5760608201516107ca9043610bdb565b60408301516107d99042610bdb565b60608401516107e89089610bdb565b6107f29190610bf2565b6107fc9190610c11565b90505b610813828284604001516101e19190610bc3565b9695505050505050565b6001805461082a90610b26565b80601f016020809104026020016040519081016040528092919081815260200182805461085690610b26565b80156108a35780601f10610878576101008083540402835291602001916108a3565b820191906000526020600020905b81548152906001019060200180831161088657829003601f168201915b505050505081565b6007816c01431e0fae6d7217caa000000081106108c757600080fd5b6003020180546001820154600290920154600f82810b9450600160801b90920490910b919084565b6001600160a01b03821660009081526c03c95a2f0b4856475fe00000076020526040812082633b9aca00811061092757610927610b97565b6003020160010154905092915050565b6002805461082a90610b26565b6002600054036109665760405162461bcd60e51b815260040161056c90610b60565b60026000556105d833825b6001600160a01b0382166109c75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161056c565b80600460008282546109d99190610bc3565b90915550506001600160a01b03821660009081526003602052604081208054839290610a06908490610bc3565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b80356001600160a01b0381168114610a6757600080fd5b919050565b60008060408385031215610a7f57600080fd5b610a8883610a50565b946020939093013593505050565b600060208284031215610aa857600080fd5b610ab182610a50565b9392505050565b600060208083528351808285015260005b81811015610ae557858101830151858201604001528201610ac9565b81811115610af7576000604083870101525b50601f01601f1916929092016040019392505050565b600060208284031215610b1f57600080fd5b5035919050565b600181811c90821680610b3a57607f821691505b602082108103610b5a57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115610bd657610bd6610bad565b500190565b600082821015610bed57610bed610bad565b500390565b6000816000190483118215151615610c0c57610c0c610bad565b500290565b600082610c2e57634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122013306a1025ac0f7d78c76b209a0d79401201ddc2f7241b10d40c3a21e5ee547464736f6c634300080d0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CE JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x900CF0CF GT PUSH2 0x104 JUMPI DUP1 PUSH4 0xCBF9FE5F GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xF76F8D78 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x451 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x459 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x47F JUMPI DUP1 PUSH4 0xFFC9514D EQ PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCBF9FE5F EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0xD1FEBFB9 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0xDA020A18 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0xEFF7A612 EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA3F4DF7E GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x373 JUMPI DUP1 PUSH4 0xADC63589 EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0xBD85B039 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xC2C4C5C1 EQ PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x900CF0CF EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x358 JUMPI DUP1 PUSH4 0x981B24D0 EQ PUSH2 0x360 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EE2CD7E GT PUSH2 0x171 JUMPI DUP1 PUSH4 0x7175D4F7 GT PUSH2 0x14B JUMPI DUP1 PUSH4 0x7175D4F7 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0x7C74A174 EQ PUSH2 0x31D JUMPI DUP1 PUSH4 0x8E5B490F EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0x8FF36FD1 EQ PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4EE2CD7E EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x57F901E2 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x71197484 EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0x1AD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x23D JUMPI DUP1 PUSH4 0x3A46273E EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x4957677C EQ PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0x10AE757 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x228 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE0000008 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xAB8 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1E9 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH2 0x58D JUMP JUMPDEST PUSH2 0x276 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x5B6 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x2A1 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x2B2 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE0000009 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xF SIGNEXTEND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE000000B SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH2 0x5E0 JUMP JUMPDEST PUSH13 0x3C95A2F0B4856475FE000000A SLOAD PUSH2 0x305 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1E9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x645 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x654 JUMP JUMPDEST PUSH2 0x230 PUSH2 0x81D JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST POP PUSH1 0x1 SWAP1 JUMP JUMPDEST PUSH2 0x3E9 PUSH2 0x3C9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA96 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD PUSH1 0xF SWAP2 SWAP1 SWAP2 SIGNEXTEND SWAP1 DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP4 SWAP1 SWAP4 SIGNEXTEND DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x416 PUSH2 0x411 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x8AB JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xF SWAP6 DUP7 SIGNEXTEND DUP2 MSTORE SWAP4 SWAP1 SWAP5 SIGNEXTEND PUSH1 0x20 DUP5 ADD MSTORE SWAP3 DUP3 ADD MSTORE PUSH1 0x60 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x44C CALLDATASIZE PUSH1 0x4 PUSH2 0xA6C JUMP JUMPDEST PUSH2 0x8EF JUMP JUMPDEST PUSH2 0x230 PUSH2 0x937 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x305 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x305 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x4B3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB0D JUMP JUMPDEST PUSH2 0x944 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F3 SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x540 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x515 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x540 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x523 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x575 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x584 DUP3 DUP3 PUSH2 0x971 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x5D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH13 0x3C95A2F0B4856475FE0000008 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH13 0x3C95A2F0B4856475FE0000007 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP2 PUSH4 0x3B9ACA00 DUP2 LT PUSH2 0x62F JUMPI PUSH2 0x62F PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x3 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0xF SIGNEXTEND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x0 NUMBER DUP3 GT ISZERO PUSH2 0x69E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2FB13637B1B5901F10313637B1B597373AB6B132B9 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP4 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x8 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x9 SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 DUP2 DUP4 ISZERO PUSH2 0x7B0 JUMPI PUSH1 0x0 PUSH1 0x7 PUSH2 0x6EF DUP6 PUSH1 0x1 PUSH2 0xBC3 JUMP JUMPDEST PUSH13 0x1431E0FAE6D7217CAA0000000 DUP2 LT PUSH2 0x70B JUMPI PUSH2 0x70B PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP3 SWAP1 SWAP3 MUL SWAP3 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xF DUP2 DUP2 SIGNEXTEND DUP5 MSTORE PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP2 DIV SWAP1 SIGNEXTEND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x60 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP6 ADD MLOAD SWAP2 SWAP3 POP EQ PUSH2 0x7AA JUMPI DUP3 PUSH1 0x60 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD PUSH2 0x770 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST DUP4 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MLOAD PUSH2 0x793 SWAP1 DUP11 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x79D SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x7A7 SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP2 POP JUMPDEST POP PUSH2 0x7FF JUMP JUMPDEST NUMBER DUP3 PUSH1 0x60 ADD MLOAD EQ PUSH2 0x7FF JUMPI PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x7CA SWAP1 NUMBER PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x7D9 SWAP1 TIMESTAMP PUSH2 0xBDB JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MLOAD PUSH2 0x7E8 SWAP1 DUP10 PUSH2 0xBDB JUMP JUMPDEST PUSH2 0x7F2 SWAP2 SWAP1 PUSH2 0xBF2 JUMP JUMPDEST PUSH2 0x7FC SWAP2 SWAP1 PUSH2 0xC11 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x813 DUP3 DUP3 DUP5 PUSH1 0x40 ADD MLOAD PUSH2 0x1E1 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x82A SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x856 SWAP1 PUSH2 0xB26 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8A3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x878 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8A3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x886 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x7 DUP2 PUSH13 0x1431E0FAE6D7217CAA0000000 DUP2 LT PUSH2 0x8C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0xF DUP3 DUP2 SIGNEXTEND SWAP5 POP PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV SWAP1 SWAP2 SIGNEXTEND SWAP2 SWAP1 DUP5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH13 0x3C95A2F0B4856475FE0000007 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 PUSH4 0x3B9ACA00 DUP2 LT PUSH2 0x927 JUMPI PUSH2 0x927 PUSH2 0xB97 JUMP JUMPDEST PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x82A SWAP1 PUSH2 0xB26 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x56C SWAP1 PUSH2 0xB60 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE PUSH2 0x5D8 CALLER DUP3 JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56C JUMP JUMPDEST DUP1 PUSH1 0x4 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x9D9 SWAP2 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA06 SWAP1 DUP5 SWAP1 PUSH2 0xBC3 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA88 DUP4 PUSH2 0xA50 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAA8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAB1 DUP3 PUSH2 0xA50 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xAE5 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xAC9 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xB3A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xB5A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xBD6 JUMPI PUSH2 0xBD6 PUSH2 0xBAD JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xBED JUMPI PUSH2 0xBED PUSH2 0xBAD JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC0C JUMPI PUSH2 0xC0C PUSH2 0xBAD JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xC2E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT ADDRESS PUSH11 0x1025AC0F7D78C76B209A0D PUSH26 0x401201DDC2F7241B10D40C3A21E5EE547464736F6C634300080D STOP CALLER ",
              "sourceMap": "1152:10813:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9807:482;;;;;;:::i;:::-;10281:1;9807:482;;;;;;;;597:25:2;;;585:2;570:18;9807:482:1;;;;;;;;3090:51;;;;;;:::i;:::-;;;;;;;;;;;;;;4486:87;;;:::i;:::-;;;;;;;:::i;4674:89::-;4748:8;4674:89;;7118:111;;;;;;:::i;:::-;;:::i;:::-;;7548:44;;;:::i;7404:58::-;;;;;;:::i;:::-;;:::i;4863:62::-;;;;;;:::i;:::-;;;3147:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1784:2:2;1773:22;;;;1755:41;;1743:2;1728:18;3147:47:1;1611:191:2;3416:35:1;;;;;-1:-1:-1;;;;;3416:35:1;;;;;;-1:-1:-1;;;;;1971:32:2;;;1953:51;;1941:2;1926:18;3416:35:1;1807:203:2;5047:377:1;;;;;;:::i;:::-;;:::i;3368:42::-;;;;;-1:-1:-1;;;;;3368:42:1;;;2875:20;;;;;;4578:91;;;:::i;10792:1170::-;;;;;;:::i;:::-;;:::i;2594:18::-;;;:::i;5795:266::-;;;;;;:::i;:::-;-1:-1:-1;;;;;6037:13:1;5854:7;6037:13;;;:6;:13;;;;;:17;;;;5795:266;10611:176;;;;;;:::i;:::-;-1:-1:-1;10775:1:1;;10611:176;2821:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2216:2:2;2205:22;;;;2187:41;;2259:2;2244:18;;2237:34;;;;2160:18;2821:47:1;2015:262:2;2902:58:1;;;;;;:::i;:::-;;:::i;:::-;;;;2538:2:2;2527:22;;;2509:41;;2586:22;;;;2581:2;2566:18;;2559:50;2625:18;;;2618:34;2683:2;2668:18;;2661:34;;;;2496:3;2481:19;2902:58:1;2282:419:2;5429:361:1;;;;;;:::i;:::-;;:::i;2636:20::-;;;:::i;4768:90::-;4833:18;4768:90;;4404:77;4469:5;4404:77;;7235:163;;;;;;:::i;:::-;;:::i;4486:87::-;4531:13;4562:4;4555:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4486:87;:::o;7118:111::-;1744:1:0;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;7202:20:1::1;7208:5:::0;7215:6;7202:5:::1;:20::i;:::-;-1:-1:-1::0;;1701:1:0;2628:7;:22;7118:111:1:o;7548:44::-;1744:1:0;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1701:1;2455:7;2628:22;7548:44:1:o;7404:58::-;1744:1:0;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;-1:-1:-1;1701:1:0;2455:7;2628:22;7404:58:1:o;5047:377::-;-1:-1:-1;;;;;5340:22:1;;5113:6;5340:22;;;:16;:22;;;;;;;;;5379:18;:24;;;;;5340:22;5379:32;;;;;;;:::i;:::-;;;;:38;-1:-1:-1;;;5379:38:1;;;;;5047:377;-1:-1:-1;;;5047:377:1:o;4578:91::-;4625:13;4656:6;4649:13;;;;;:::i;10792:1170::-;10854:7;11099:12;11089:6;:22;;11081:56;;;;-1:-1:-1;;;11081:56:1;;3785:2:2;11081:56:1;;;3767:21:2;3824:2;3804:18;;;3797:30;-1:-1:-1;;;3843:18:2;;;3836:51;3904:18;;11081:56:1;3583:345:2;11081:56:1;11164:5;;11245:48;;;;;;;;11266:13;11245:48;;;;;;;-1:-1:-1;;;11245:48:1;;;;;;;;;;;;;;;;;;;;;;;;11147:14;;;11331:21;;11327:447;;11367:23;11393:13;11407:16;:12;11422:1;11407:16;:::i;:::-;11393:31;;;;;;;:::i;:::-;11367:57;;;;;;;;11393:31;;;;;;;;;11367:57;;;;;;;;-1:-1:-1;;;11367:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11442:9;;;11367:57;;-1:-1:-1;11442:27:1;11438:150;;11563:5;:9;;;11546:10;:14;;;:26;;;;:::i;:::-;11533:5;:8;;;11517:10;:13;;;:24;;;;:::i;:::-;11503:9;;;;11494:18;;:6;:18;:::i;:::-;11493:49;;;;:::i;:::-;:80;;;;:::i;:::-;11488:85;;11438:150;11353:245;11327:447;;;11633:12;11620:5;:9;;;:25;11616:148;;11739:9;;;;11724:24;;:12;:24;:::i;:::-;11711:8;;;;11693:26;;:15;:26;:::i;:::-;11679:9;;;;11670:18;;:6;:18;:::i;:::-;11669:51;;;;:::i;:::-;:80;;;;:::i;:::-;11664:85;;11616:148;11854:31;11864:5;11882:2;11871:5;:8;;;:13;;;;:::i;11854:31::-;11847:38;10792:1170;-1:-1:-1;;;;;;10792:1170:1:o;2594:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2902:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2902:58:1;;;;;;;;;:::o;5429:361::-;-1:-1:-1;;;;;5749:25:1;;5513:7;5749:25;;;:18;:25;;;;;5775:4;5749:31;;;;;;;:::i;:::-;;;;:34;;;5742:41;;5429:361;;;;:::o;2636:20::-;;;;;;;:::i;7235:163::-;1744:1:0;2325:7;;:19;2317:63;;;;-1:-1:-1;;;2317:63:0;;;;;;;:::i;:::-;1744:1;2455:7;:18;7304:25:1::1;7310:10;7322:6:::0;6412:386;-1:-1:-1;;;;;6495:21:1;;6487:65;;;;-1:-1:-1;;;6487:65:1;;4925:2:2;6487:65:1;;;4907:21:2;4964:2;4944:18;;;4937:30;5003:33;4983:18;;;4976:61;5054:18;;6487:65:1;4723:355:2;6487:65:1;6639:6;6623:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6655:15:1;;;;;;:6;:15;;;;;:25;;6674:6;;6655:15;:25;;6674:6;;6655:25;:::i;:::-;;;;-1:-1:-1;;6695:37:1;;597:25:2;;;-1:-1:-1;;;;;6695:37:1;;;6712:1;;6695:37;;585:2:2;570:18;6695:37:1;;;;;;;6412:386;;:::o;14:173:2:-;82:20;;-1:-1:-1;;;;;131:31:2;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:2:o;633:186::-;692:6;745:2;733:9;724:7;720:23;716:32;713:52;;;761:1;758;751:12;713:52;784:29;803:9;784:29;:::i;:::-;774:39;633:186;-1:-1:-1;;;633:186:2:o;824:597::-;936:4;965:2;994;983:9;976:21;1026:6;1020:13;1069:6;1064:2;1053:9;1049:18;1042:34;1094:1;1104:140;1118:6;1115:1;1112:13;1104:140;;;1213:14;;;1209:23;;1203:30;1179:17;;;1198:2;1175:26;1168:66;1133:10;;1104:140;;;1262:6;1259:1;1256:13;1253:91;;;1332:1;1327:2;1318:6;1307:9;1303:22;1299:31;1292:42;1253:91;-1:-1:-1;1405:2:2;1384:15;-1:-1:-1;;1380:29:2;1365:45;;;;1412:2;1361:54;;824:597;-1:-1:-1;;;824:597:2:o;1426:180::-;1485:6;1538:2;1526:9;1517:7;1513:23;1509:32;1506:52;;;1554:1;1551;1544:12;1506:52;-1:-1:-1;1577:23:2;;1426:180;-1:-1:-1;1426:180:2:o;2706:380::-;2785:1;2781:12;;;;2828;;;2849:61;;2903:4;2895:6;2891:17;2881:27;;2849:61;2956:2;2948:6;2945:14;2925:18;2922:38;2919:161;;3002:10;2997:3;2993:20;2990:1;2983:31;3037:4;3034:1;3027:15;3065:4;3062:1;3055:15;2919:161;;2706:380;;;:::o;3091:355::-;3293:2;3275:21;;;3332:2;3312:18;;;3305:30;3371:33;3366:2;3351:18;;3344:61;3437:2;3422:18;;3091:355::o;3451:127::-;3512:10;3507:3;3503:20;3500:1;3493:31;3543:4;3540:1;3533:15;3567:4;3564:1;3557:15;3933:127;3994:10;3989:3;3985:20;3982:1;3975:31;4025:4;4022:1;4015:15;4049:4;4046:1;4039:15;4065:128;4105:3;4136:1;4132:6;4129:1;4126:13;4123:39;;;4142:18;;:::i;:::-;-1:-1:-1;4178:9:2;;4065:128::o;4198:125::-;4238:4;4266:1;4263;4260:8;4257:34;;;4271:18;;:::i;:::-;-1:-1:-1;4308:9:2;;4198:125::o;4328:168::-;4368:7;4434:1;4430;4426:6;4422:14;4419:1;4416:21;4411:1;4404:9;4397:17;4393:45;4390:71;;;4441:18;;:::i;:::-;-1:-1:-1;4481:9:2;;4328:168::o;4501:217::-;4541:1;4567;4557:132;;4611:10;4606:3;4602:20;4599:1;4592:31;4646:4;4643:1;4636:15;4674:4;4671:1;4664:15;4557:132;-1:-1:-1;4703:9:2;;4501:217::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "635400",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "NAME()": "infinite",
                "SYMBOL()": "infinite",
                "admin()": "infinite",
                "apply_smart_wallet_checker()": "209",
                "balanceOf(address,uint256)": "417",
                "balanceOfAt(address,uint256)": "416",
                "checkpoint()": "231",
                "commit_smart_wallet_checker(address)": "360",
                "create_lock(uint256)": "infinite",
                "decimals()": "infinite",
                "deposit_for(address,uint256)": "infinite",
                "epoch()": "2330",
                "future_smart_wallet_checker()": "2448",
                "get_last_user_slope(address)": "4870",
                "increase_amount(uint256)": "24564",
                "increase_unlock_time(uint256)": "24563",
                "locked(address)": "4737",
                "locked__end(address)": "2599",
                "name()": "infinite",
                "point_history(uint256)": "6850",
                "slope_changes(uint256)": "2550",
                "smart_wallet_checker()": "2382",
                "symbol()": "infinite",
                "token()": "infinite",
                "totalSupply(uint256)": "352",
                "totalSupplyAt(uint256)": "infinite",
                "user_point_epoch(address)": "2577",
                "user_point_history__ts(address,uint256)": "2706",
                "withdraw()": "24463"
              },
              "internal": {
                "_afterTokenTransfer(address,address,uint256)": "infinite",
                "_beforeTokenTransfer(address,address,uint256)": "infinite",
                "_checkpoint(address,struct veBalMock.LockedBalance memory,struct veBalMock.LockedBalance memory)": "infinite",
                "_deposit_for(address,uint256,uint256,struct veBalMock.LockedBalance memory,int128)": "infinite",
                "_mint(address,uint256)": "infinite",
                "assert_not_contract(address)": "infinite",
                "find_block_epoch(uint256,uint256)": "infinite",
                "find_block_user_epoch(address,uint256,uint256)": "infinite",
                "find_timestamp_epoch(uint256,uint256)": "infinite",
                "find_timestamp_user_epoch(address,uint256,uint256)": "infinite",
                "supply_at(struct veBalMock.Point memory,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "NAME()": "a3f4df7e",
              "SYMBOL()": "f76f8d78",
              "admin()": "f851a440",
              "apply_smart_wallet_checker()": "8e5b490f",
              "balanceOf(address,uint256)": "00fdd58e",
              "balanceOfAt(address,uint256)": "4ee2cd7e",
              "checkpoint()": "c2c4c5c1",
              "commit_smart_wallet_checker(address)": "57f901e2",
              "create_lock(uint256)": "ffc9514d",
              "decimals()": "313ce567",
              "deposit_for(address,uint256)": "3a46273e",
              "epoch()": "900cf0cf",
              "future_smart_wallet_checker()": "8ff36fd1",
              "get_last_user_slope(address)": "7c74a174",
              "increase_amount(uint256)": "4957677c",
              "increase_unlock_time(uint256)": "eff7a612",
              "locked(address)": "cbf9fe5f",
              "locked__end(address)": "adc63589",
              "name()": "06fdde03",
              "point_history(uint256)": "d1febfb9",
              "slope_changes(uint256)": "71197484",
              "smart_wallet_checker()": "7175d4f7",
              "symbol()": "95d89b41",
              "token()": "fc0c546a",
              "totalSupply(uint256)": "bd85b039",
              "totalSupplyAt(uint256)": "981b24d0",
              "user_point_epoch(address)": "010ae757",
              "user_point_history__ts(address,uint256)": "da020a18",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token_addr\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_authorizer_adaptor\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"locktime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int128\",\"name\":\"type_\",\"type\":\"int128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"prevSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"apply_smart_wallet_checker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_t\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"balanceOfAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"checkpoint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"commit_smart_wallet_checker\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"create_lock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"deposit_for\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"future_smart_wallet_checker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"get_last_user_slope\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"increase_amount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlock_time\",\"type\":\"uint256\"}],\"name\":\"increase_unlock_time\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"locked\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"amount\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"end\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"locked__end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"point_history\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"bias\",\"type\":\"int128\"},{\"internalType\":\"int128\",\"name\":\"slope\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"ts\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blk\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"slope_changes\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"smart_wallet_checker\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"t\",\"type\":\"uint256\"}],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"totalSupplyAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"user_point_epoch\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_idx\",\"type\":\"uint256\"}],\"name\":\"user_point_history__ts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/veBalMock.sol\":\"veBalMock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"contracts/test/veBalMock.sol\":{\"content\":\"//mock of vebal contract from mainnet\\n//by address 0xC128a9954e6c874eA3d62ce62B468bA073093F25\\n\\n// solium-disable linebreak-style\\npragma solidity 0.8.13;\\n\\n// import \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\n\\ninterface BAL_ERC20 { //was just ERC20 in their Vyper contract\\n    function decimals() external view returns (uint256);\\n    function name() external view returns (string memory);\\n    function symbol() external view returns (string memory);\\n    function transfer(address to, uint256 amount) external returns (bool); //nonpayable\\n    function transferFrom(address spender, address to, uint256 amount) external returns (bool); //nonpayable\\n}\\n// Interface for checking whether address belongs to a whitelisted\\n// type of a smart wallet.\\n// When new types are added - the whole contract is changed\\n// The check() method is modifying to be able to use caching\\n// for individual wallet addresses \\ninterface SmartWalletChecker {\\n    function check(address addr) external returns (bool);//nonpayable\\n}   \\n\\n// contract BalMock is ERC20, ReentrancyGuard, SmartWalletChecker, BALERC20 {\\ncontract veBalMock is ReentrancyGuard {\\n// contract BalMock is BAL_ERC20, SmartWalletChecker{//}, ReentrancyGuard {\\n\\n    struct Point{\\n        int128 bias;\\n        int128 slope; // - dweight / dt\\n        uint256 ts;\\n        uint256 blk; // block\\n    }\\n    // We cannot really do block numbers per se b/c slope is per time, not per block\\n    // and per block could be fairly bad b/c Ethereum changes blocktimes.\\n    // What we can do is to extrapolate ***At functions\\n\\n    struct LockedBalance{\\n        int128 amount; \\n        uint256 end;\\n    }  \\n\\n    address constant ZERO_ADDRESS = address(0x0000000000000000000000000000000000000000);\\n\\n    int128 constant DEPOSIT_FOR_TYPE = 0;\\n    int128 constant CREATE_LOCK_TYPE = 1;\\n    int128 constant INCREASE_LOCK_AMOUNT = 2;\\n    int128 constant INCREASE_UNLOCK_TIME = 3;\\n\\n    event Deposit(address indexed provider, uint256 value, uint256 indexed locktime, int128 type_, uint256 ts); //if just type without _ --> was highlited as error\\n    event Withdraw(address indexed provider, uint256 value, uint256 ts);\\n    event Supply(uint256 prevSupply, uint256 supply);\\n\\n    uint256 constant WEEK = 7 * 86400; //all future times are rounded by week\\n    uint256 constant MAXTIME = 365 * 86400;  // 1 year\\n    uint256 constant MULTIPLIER = 10 ** 18;\\n\\n\\n    address immutable TOKEN; \\n    address immutable AUTHORIZER_ADAPTOR; //Authorizer Adaptor\\n\\n    //string is not succorted to be immutable in solidity\\n    string public NAME; //immutable NAME;\\n    string public SYMBOL; //immutable SYMBOL; \\n    uint256 immutable DECIMALS;\\n\\n    // uint256 public supply;\\n    mapping(address => uint256) supply;\\n    uint256 private _totalSupply;\\n\\n    mapping(address => LockedBalance) public locked;\\n\\n    uint256 public epoch;\\n\\n    Point[100000000000000000000000000000] public point_history; //epoch -> unsigned point\\n    mapping(address => Point[1000000000]) private user_point_history; //user -> Point[user_epoch]\\n    mapping(address => uint256) public user_point_epoch;\\n    mapping(uint256 => int128) public slope_changes; //time -> signed slope change\\n\\n    // Checker for whitelisted (smart contract) wallets which are allowed to deposit\\n    // The goal is to prevent tokenizing the escrow\\n    address public future_smart_wallet_checker;\\n    address public smart_wallet_checker;\\n\\n\\n    //__init__\\n    constructor(\\n        address token_addr,\\n        string memory _name,\\n        string memory  _symbol,\\n        address _authorizer_adaptor\\n    ) //ERC20(_name, _symbol)\\n    public {\\n        /**\\n        @notice Contract constructor\\n        @param token_addr 80/20 BAL-WETH BPT token address\\n        @param _name Token name\\n        @param _symbol Token symbol\\n        @param _authorizer_adaptor `AuthorizerAdaptor` contract address\\n        */\\n        require(_authorizer_adaptor != ZERO_ADDRESS, \\\"BalMock: _authorizer_adaptor == ZERO_ADDRESS\\\");\\n\\n        TOKEN = token_addr;\\n        AUTHORIZER_ADAPTOR = _authorizer_adaptor;\\n        point_history[0].blk = block.number;\\n        point_history[0].ts = block.timestamp;\\n\\n        uint256 _decimals = BAL_ERC20(token_addr).decimals();\\n        require(_decimals <= 255, \\\"BalMock: _decimals > 255\\\");\\n\\n        NAME = _name;\\n        SYMBOL = _symbol;\\n        DECIMALS = _decimals;\\n    }\\n\\n\\n    function token() external view returns (address){\\n        return TOKEN;\\n    }\\n    function name() public view virtual returns (string memory){\\n        return NAME;\\n    }\\n    function symbol() public view virtual returns (string memory){\\n        return SYMBOL;\\n    }\\n    function decimals() public view virtual returns (uint256){\\n        return DECIMALS;\\n    }\\n    function admin() external view returns (address){\\n        return AUTHORIZER_ADAPTOR;\\n    }\\n    function commit_smart_wallet_checker(address addr) external {}\\n    function apply_smart_wallet_checker() external {}\\n    function assert_not_contract(address addr) internal {}    \\n    function get_last_user_slope(address addr) external view returns (int128){\\n        /**\\n        @notice Get the most recently recorded rate of voting power decrease for `addr`\\n        @param addr Address of the user wallet\\n        @return Value of the slope\\n        */\\n        uint256 uepoch = user_point_epoch[addr];\\n        return user_point_history[addr][uepoch].slope;\\n    }\\n    function user_point_history__ts(address _addr, uint256 _idx) external view returns (uint256){\\n        /**\\n        @notice Get the timestamp for checkpoint `_idx` for `_addr`\\n        @param _addr User wallet address\\n        @param _idx User epoch number\\n        @return Epoch time of the checkpoint\\n    */\\n        return user_point_history[_addr][_idx].ts;\\n    }\\n    function locked__end(address _addr) external view returns (uint256){\\n        /**\\n        @notice Get timestamp when `_addr`'s lock finishes\\n        @param _addr User wallet\\n        @return Epoch time of the lock end\\n        */\\n        return locked[_addr].end;\\n    }\\n\\n// FROM ERC20\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        supply[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n// FROM ERC20 END\\n\\n    function _checkpoint(address addr, LockedBalance memory old_locked, LockedBalance memory new_locked) internal {}\\n    function _deposit_for(address _addr, uint256 _value, uint256 unlock_time, LockedBalance memory locked_balance, int128 type_) internal {}\\n    function checkpoint() external {}\\n    function deposit_for(address _addr, uint256 _value) external nonReentrant {\\n        _mint(_addr, _value);\\n    }\\n\\n    function create_lock(uint256 tokens) external nonReentrant {\\n        _mint(msg.sender, tokens);\\n        // BAL_ERC20(TOKEN).transferFrom(msg.sender, tokens);\\n    }\\n\\n    function increase_amount(uint256) external nonReentrant {}\\n    function increase_unlock_time(uint256 _unlock_time) external nonReentrant {}\\n    function withdraw() external nonReentrant {}\\n\\n    // The following ERC20/minime-compatible methods are not real balanceOf and supply!\\n    // They measure the weights for the purpose of voting, so they don't represent\\n    // real coins.\\n\\n    function find_block_epoch(uint256 _block, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch containing block number\\n        @param _block Block to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _block\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n\\n        return _min;\\n    }\\n    function find_timestamp_epoch(uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch for timestamp\\n        @param _timestamp timestamp to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _timestamp\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function find_block_user_epoch(address addr, uint256 _block, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find epoch for block number\\n        @param _addr User for which to find user epoch for\\n        @param _block Block to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _block\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function find_timestamp_user_epoch(address addr, uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\\n        /**\\n        @notice Binary search to find user epoch for timestamp\\n        @param _addr User for which to find user epoch for\\n        @param _timestamp timestamp to find\\n        @param max_epoch Don't go beyond this epoch\\n        @return Epoch which contains _timestamp\\n        */\\n\\n        // Binary search\\n        uint256 _min = 0;\\n        uint256 _max = max_epoch;\\n        //some code\\n        \\n        return _min;\\n    }\\n    function balanceOf(address addr, uint256 _t) external view returns (uint256){\\n        /**\\n        @notice Get the current voting power for `msg.sender`\\n        @dev Adheres to the ERC20 `balanceOf` interface for Aragon compatibility\\n        @param addr User wallet address\\n        @param _t Epoch time to return voting power at\\n        @return User voting power\\n        */\\n        uint256 _t = block.timestamp;\\n\\n        //some code and actual rerurn is not 1\\n        return 1;\\n    }\\n    function balanceOfAt(address addr, uint256 _block) external view returns (uint256){\\n        //some code and actual rerurn is not 1\\n        return 1;\\n    }\\n    function supply_at(Point memory p, uint256 t) internal view returns (uint256){\\n        //some code and actual rerurn is not 1\\n        return 1;    \\n    }\\n    function totalSupply(uint256 t) external view returns (uint256){\\n        uint256 t = block.timestamp;\\n        //some code and actual rerurn is not 1\\n        return 1;    \\n    }\\n    function totalSupplyAt(uint256 _block) external view returns (uint256){\\n        /**\\n        @notice Calculate total voting power at some point in the past\\n        @param _block Block to calculate the total voting power at\\n        @return Total voting power at `_block`\\n        */\\n\\n        require(_block <= block.number, \\\"_block > block.number\\\");\\n        uint256 _epoch = epoch;\\n        uint256 target_epoch = find_block_epoch(_block, _epoch);\\n\\n        Point memory point = point_history[target_epoch];\\n        uint256 dt = 0;\\n        if (target_epoch < _epoch){\\n            Point memory point_next = point_history[target_epoch + 1];\\n            if (point.blk != point_next.blk){\\n                dt = (_block - point.blk) * (point_next.ts - point.ts) / (point_next.blk - point.blk);\\n            }\\n        }else{\\n            if (point.blk != block.number){\\n                dt = (_block - point.blk) * (block.timestamp - point.ts) / (block.number - point.blk);\\n            }\\n        }\\n        // Now dt contains info on how far are we beyond point\\n\\n        return supply_at(point, point.ts + dt);\\n\\n        //some code and actual return is not 1\\n        // return 1; \\n    }\\n\\n}\\n\\n\\n\",\"keccak256\":\"0x8df5e59256315fba846eed57deb168b84647d02ddae6bfae3dc7a4cf66ae6653\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 10,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "_status",
                "offset": 0,
                "slot": "0",
                "type": "t_uint256"
              },
              {
                "astId": 167,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "NAME",
                "offset": 0,
                "slot": "1",
                "type": "t_string_storage"
              },
              {
                "astId": 169,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "SYMBOL",
                "offset": 0,
                "slot": "2",
                "type": "t_string_storage"
              },
              {
                "astId": 175,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "supply",
                "offset": 0,
                "slot": "3",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 177,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              },
              {
                "astId": 182,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "locked",
                "offset": 0,
                "slot": "5",
                "type": "t_mapping(t_address,t_struct(LockedBalance)102_storage)"
              },
              {
                "astId": 184,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "epoch",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              },
              {
                "astId": 189,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "point_history",
                "offset": 0,
                "slot": "7",
                "type": "t_array(t_struct(Point)97_storage)100000000000000000000000000000_storage"
              },
              {
                "astId": 196,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "user_point_history",
                "offset": 0,
                "slot": "300000000000000000000000000007",
                "type": "t_mapping(t_address,t_array(t_struct(Point)97_storage)1000000000_storage)"
              },
              {
                "astId": 200,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "user_point_epoch",
                "offset": 0,
                "slot": "300000000000000000000000000008",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 204,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "slope_changes",
                "offset": 0,
                "slot": "300000000000000000000000000009",
                "type": "t_mapping(t_uint256,t_int128)"
              },
              {
                "astId": 206,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "future_smart_wallet_checker",
                "offset": 0,
                "slot": "300000000000000000000000000010",
                "type": "t_address"
              },
              {
                "astId": 208,
                "contract": "contracts/test/veBalMock.sol:veBalMock",
                "label": "smart_wallet_checker",
                "offset": 0,
                "slot": "300000000000000000000000000011",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(Point)97_storage)100000000000000000000000000000_storage": {
                "base": "t_struct(Point)97_storage",
                "encoding": "inplace",
                "label": "struct veBalMock.Point[100000000000000000000000000000]",
                "numberOfBytes": "9600000000000000000000000000000"
              },
              "t_array(t_struct(Point)97_storage)1000000000_storage": {
                "base": "t_struct(Point)97_storage",
                "encoding": "inplace",
                "label": "struct veBalMock.Point[1000000000]",
                "numberOfBytes": "96000000000"
              },
              "t_int128": {
                "encoding": "inplace",
                "label": "int128",
                "numberOfBytes": "16"
              },
              "t_mapping(t_address,t_array(t_struct(Point)97_storage)1000000000_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct veBalMock.Point[1000000000])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(Point)97_storage)1000000000_storage"
              },
              "t_mapping(t_address,t_struct(LockedBalance)102_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct veBalMock.LockedBalance)",
                "numberOfBytes": "32",
                "value": "t_struct(LockedBalance)102_storage"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_uint256,t_int128)": {
                "encoding": "mapping",
                "key": "t_uint256",
                "label": "mapping(uint256 => int128)",
                "numberOfBytes": "32",
                "value": "t_int128"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_struct(LockedBalance)102_storage": {
                "encoding": "inplace",
                "label": "struct veBalMock.LockedBalance",
                "members": [
                  {
                    "astId": 99,
                    "contract": "contracts/test/veBalMock.sol:veBalMock",
                    "label": "amount",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_int128"
                  },
                  {
                    "astId": 101,
                    "contract": "contracts/test/veBalMock.sol:veBalMock",
                    "label": "end",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_struct(Point)97_storage": {
                "encoding": "inplace",
                "label": "struct veBalMock.Point",
                "members": [
                  {
                    "astId": 90,
                    "contract": "contracts/test/veBalMock.sol:veBalMock",
                    "label": "bias",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_int128"
                  },
                  {
                    "astId": 92,
                    "contract": "contracts/test/veBalMock.sol:veBalMock",
                    "label": "slope",
                    "offset": 16,
                    "slot": "0",
                    "type": "t_int128"
                  },
                  {
                    "astId": 94,
                    "contract": "contracts/test/veBalMock.sol:veBalMock",
                    "label": "ts",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 96,
                    "contract": "contracts/test/veBalMock.sol:veBalMock",
                    "label": "blk",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_uint256"
                  }
                ],
                "numberOfBytes": "96"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/test/veBalMock.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/test/veBalMock.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2519",
        "formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/test/veBalMock.sol:282:9:\n    |\n282 |         uint256 _t = block.timestamp;\n    |         ^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/test/veBalMock.sol:274:38:\n    |\n274 |     function balanceOf(address addr, uint256 _t) external view returns (uint256){\n    |                                      ^^^^^^^^^^\n\n",
        "message": "This declaration shadows an existing declaration.",
        "secondarySourceLocations": [
          {
            "end": 9850,
            "file": "contracts/test/veBalMock.sol",
            "message": "The shadowed declaration is here:",
            "start": 9840
          }
        ],
        "severity": "warning",
        "sourceLocation": {
          "end": 10198,
          "file": "contracts/test/veBalMock.sol",
          "start": 10188
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2519",
        "formattedMessage": "Warning: This declaration shadows an existing declaration.\n   --> contracts/test/veBalMock.sol:296:9:\n    |\n296 |         uint256 t = block.timestamp;\n    |         ^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> contracts/test/veBalMock.sol:295:26:\n    |\n295 |     function totalSupply(uint256 t) external view returns (uint256){\n    |                          ^^^^^^^^^\n\n",
        "message": "This declaration shadows an existing declaration.",
        "secondarySourceLocations": [
          {
            "end": 10641,
            "file": "contracts/test/veBalMock.sol",
            "message": "The shadowed declaration is here:",
            "start": 10632
          }
        ],
        "severity": "warning",
        "sourceLocation": {
          "end": 10693,
          "file": "contracts/test/veBalMock.sol",
          "start": 10684
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2462",
        "formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/test/veBalMock.sol:89:5:\n   |\n89 |     constructor(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
        "severity": "warning",
        "sourceLocation": {
          "end": 4397,
          "file": "contracts/test/veBalMock.sol",
          "start": 3474
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "7325",
        "formattedMessage": "Warning: Type struct veBalMock.Point[100000000000000000000000000000] covers a large part of storage and thus makes collisions likely. Either use mappings or dynamic arrays and allow their size to be increased only in small quantities per transaction.\n  --> contracts/test/veBalMock.sol:77:5:\n   |\n77 |     Point[100000000000000000000000000000] public point_history; //epoch -> unsigned point\n   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Type struct veBalMock.Point[100000000000000000000000000000] covers a large part of storage and thus makes collisions likely. Either use mappings or dynamic arrays and allow their size to be increased only in small quantities per transaction.",
        "severity": "warning",
        "sourceLocation": {
          "end": 2939,
          "file": "contracts/test/veBalMock.sol",
          "start": 2902
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:212:31:\n    |\n212 |     function find_block_epoch(uint256 _block, uint256 max_epoch) internal view returns (uint256){\n    |                               ^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 7829,
          "file": "contracts/test/veBalMock.sol",
          "start": 7815
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2072",
        "formattedMessage": "Warning: Unused local variable.\n   --> contracts/test/veBalMock.sol:222:9:\n    |\n222 |         uint256 _max = max_epoch;\n    |         ^^^^^^^^^^^^\n\n",
        "message": "Unused local variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 8178,
          "file": "contracts/test/veBalMock.sol",
          "start": 8166
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:227:35:\n    |\n227 |     function find_timestamp_epoch(uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\n    |                                   ^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 8292,
          "file": "contracts/test/veBalMock.sol",
          "start": 8274
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2072",
        "formattedMessage": "Warning: Unused local variable.\n   --> contracts/test/veBalMock.sol:237:9:\n    |\n237 |         uint256 _max = max_epoch;\n    |         ^^^^^^^^^^^^\n\n",
        "message": "Unused local variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 8643,
          "file": "contracts/test/veBalMock.sol",
          "start": 8631
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:242:36:\n    |\n242 |     function find_block_user_epoch(address addr, uint256 _block, uint256 max_epoch) internal view returns (uint256){\n    |                                    ^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 8760,
          "file": "contracts/test/veBalMock.sol",
          "start": 8748
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:242:50:\n    |\n242 |     function find_block_user_epoch(address addr, uint256 _block, uint256 max_epoch) internal view returns (uint256){\n    |                                                  ^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 8776,
          "file": "contracts/test/veBalMock.sol",
          "start": 8762
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2072",
        "formattedMessage": "Warning: Unused local variable.\n   --> contracts/test/veBalMock.sol:253:9:\n    |\n253 |         uint256 _max = max_epoch;\n    |         ^^^^^^^^^^^^\n\n",
        "message": "Unused local variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 9177,
          "file": "contracts/test/veBalMock.sol",
          "start": 9165
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:258:40:\n    |\n258 |     function find_timestamp_user_epoch(address addr, uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\n    |                                        ^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 9298,
          "file": "contracts/test/veBalMock.sol",
          "start": 9286
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:258:54:\n    |\n258 |     function find_timestamp_user_epoch(address addr, uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\n    |                                                      ^^^^^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 9318,
          "file": "contracts/test/veBalMock.sol",
          "start": 9300
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2072",
        "formattedMessage": "Warning: Unused local variable.\n   --> contracts/test/veBalMock.sol:269:9:\n    |\n269 |         uint256 _max = max_epoch;\n    |         ^^^^^^^^^^^^\n\n",
        "message": "Unused local variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 9733,
          "file": "contracts/test/veBalMock.sol",
          "start": 9721
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:274:24:\n    |\n274 |     function balanceOf(address addr, uint256 _t) external view returns (uint256){\n    |                        ^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 9838,
          "file": "contracts/test/veBalMock.sol",
          "start": 9826
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:274:38:\n    |\n274 |     function balanceOf(address addr, uint256 _t) external view returns (uint256){\n    |                                      ^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 9850,
          "file": "contracts/test/veBalMock.sol",
          "start": 9840
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2072",
        "formattedMessage": "Warning: Unused local variable.\n   --> contracts/test/veBalMock.sol:282:9:\n    |\n282 |         uint256 _t = block.timestamp;\n    |         ^^^^^^^^^^\n\n",
        "message": "Unused local variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 10198,
          "file": "contracts/test/veBalMock.sol",
          "start": 10188
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:287:26:\n    |\n287 |     function balanceOfAt(address addr, uint256 _block) external view returns (uint256){\n    |                          ^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 10327,
          "file": "contracts/test/veBalMock.sol",
          "start": 10315
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:287:40:\n    |\n287 |     function balanceOfAt(address addr, uint256 _block) external view returns (uint256){\n    |                                        ^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 10343,
          "file": "contracts/test/veBalMock.sol",
          "start": 10329
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:291:24:\n    |\n291 |     function supply_at(Point memory p, uint256 t) internal view returns (uint256){\n    |                        ^^^^^^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 10486,
          "file": "contracts/test/veBalMock.sol",
          "start": 10472
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:291:40:\n    |\n291 |     function supply_at(Point memory p, uint256 t) internal view returns (uint256){\n    |                                        ^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 10497,
          "file": "contracts/test/veBalMock.sol",
          "start": 10488
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "5667",
        "formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/test/veBalMock.sol:295:26:\n    |\n295 |     function totalSupply(uint256 t) external view returns (uint256){\n    |                          ^^^^^^^^^\n\n",
        "message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
        "severity": "warning",
        "sourceLocation": {
          "end": 10641,
          "file": "contracts/test/veBalMock.sol",
          "start": 10632
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2072",
        "formattedMessage": "Warning: Unused local variable.\n   --> contracts/test/veBalMock.sol:296:9:\n    |\n296 |         uint256 t = block.timestamp;\n    |         ^^^^^^^^^\n\n",
        "message": "Unused local variable.",
        "severity": "warning",
        "sourceLocation": {
          "end": 10693,
          "file": "contracts/test/veBalMock.sol",
          "start": 10684
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/test/veBalMock.sol:212:5:\n    |\n212 |     function find_block_epoch(uint256 _block, uint256 max_epoch) internal view returns (uint256){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 8239,
          "file": "contracts/test/veBalMock.sol",
          "start": 7789
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/test/veBalMock.sol:227:5:\n    |\n227 |     function find_timestamp_epoch(uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 8712,
          "file": "contracts/test/veBalMock.sol",
          "start": 8244
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/test/veBalMock.sol:242:5:\n    |\n242 |     function find_block_user_epoch(address addr, uint256 _block, uint256 max_epoch) internal view returns (uint256){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 9246,
          "file": "contracts/test/veBalMock.sol",
          "start": 8717
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/test/veBalMock.sol:258:5:\n    |\n258 |     function find_timestamp_user_epoch(address addr, uint256 _timestamp, uint256 max_epoch) internal view returns (uint256){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 9802,
          "file": "contracts/test/veBalMock.sol",
          "start": 9251
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/test/veBalMock.sol:287:5:\n    |\n287 |     function balanceOfAt(address addr, uint256 _block) external view returns (uint256){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 10448,
          "file": "contracts/test/veBalMock.sol",
          "start": 10294
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "2018",
        "formattedMessage": "Warning: Function state mutability can be restricted to pure\n   --> contracts/test/veBalMock.sol:291:5:\n    |\n291 |     function supply_at(Point memory p, uint256 t) internal view returns (uint256){\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
        "message": "Function state mutability can be restricted to pure",
        "severity": "warning",
        "sourceLocation": {
          "end": 10606,
          "file": "contracts/test/veBalMock.sol",
          "start": 10453
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
          "exportedSymbols": {
            "ReentrancyGuard": [
              39
            ]
          },
          "id": 40,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "97:23:0"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "122:750:0",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 39,
              "linearizedBaseContracts": [
                39
              ],
              "name": "ReentrancyGuard",
              "nameLocation": "891:15:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 5,
                  "mutability": "constant",
                  "name": "_NOT_ENTERED",
                  "nameLocation": "1686:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1661:41:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 4,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1701:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 8,
                  "mutability": "constant",
                  "name": "_ENTERED",
                  "nameLocation": "1733:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1708:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1708:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1744:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 10,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1768:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 39,
                  "src": "1752:23:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 17,
                    "nodeType": "Block",
                    "src": "1796:39:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 15,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 13,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "1806:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 14,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "1816:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1806:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 16,
                        "nodeType": "ExpressionStatement",
                        "src": "1806:22:0"
                      }
                    ]
                  },
                  "id": 18,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 11,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1793:2:0"
                  },
                  "returnParameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1796:0:0"
                  },
                  "scope": 39,
                  "src": "1782:53:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 37,
                    "nodeType": "Block",
                    "src": "2236:421:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 24,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 22,
                                "name": "_status",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10,
                                "src": "2325:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 23,
                                "name": "_ENTERED",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 8,
                                "src": "2336:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2325:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 25,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2346:33:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 21,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2317:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2317:63:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 27,
                        "nodeType": "ExpressionStatement",
                        "src": "2317:63:0"
                      },
                      {
                        "expression": {
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 28,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2455:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 29,
                            "name": "_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "2465:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2455:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 31,
                        "nodeType": "ExpressionStatement",
                        "src": "2455:18:0"
                      },
                      {
                        "id": 32,
                        "nodeType": "PlaceholderStatement",
                        "src": "2484:1:0"
                      },
                      {
                        "expression": {
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 33,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "2628:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 34,
                            "name": "_NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "2638:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2628:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 36,
                        "nodeType": "ExpressionStatement",
                        "src": "2628:22:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 19,
                    "nodeType": "StructuredDocumentation",
                    "src": "1841:366:0",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 38,
                  "name": "nonReentrant",
                  "nameLocation": "2221:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 20,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2233:2:0"
                  },
                  "src": "2212:445:0",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 40,
              "src": "873:1786:0",
              "usedErrors": []
            }
          ],
          "src": "97:2563:0"
        },
        "id": 0
      },
      "contracts/test/veBalMock.sol": {
        "ast": {
          "absolutePath": "contracts/test/veBalMock.sol",
          "exportedSymbols": {
            "BAL_ERC20": [
              78
            ],
            "ReentrancyGuard": [
              39
            ],
            "SmartWalletChecker": [
              86
            ],
            "veBalMock": [
              817
            ]
          },
          "id": 818,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 41,
              "literals": [
                "solidity",
                "0.8",
                ".13"
              ],
              "nodeType": "PragmaDirective",
              "src": "129:23:1"
            },
            {
              "absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
              "id": 42,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 818,
              "sourceUnit": 40,
              "src": "213:62:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "BAL_ERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 78,
              "linearizedBaseContracts": [
                78
              ],
              "name": "BAL_ERC20",
              "nameLocation": "287:9:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "313ce567",
                  "id": 47,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "353:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 43,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "361:2:1"
                  },
                  "returnParameters": {
                    "id": 46,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 45,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 47,
                        "src": "387:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 44,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "387:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "386:9:1"
                  },
                  "scope": 78,
                  "src": "344:52:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 52,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "410:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "414:2:1"
                  },
                  "returnParameters": {
                    "id": 51,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 50,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 52,
                        "src": "440:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 49,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "440:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "439:15:1"
                  },
                  "scope": 78,
                  "src": "401:54:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 57,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "469:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 53,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "475:2:1"
                  },
                  "returnParameters": {
                    "id": 56,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 55,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 57,
                        "src": "501:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 54,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:15:1"
                  },
                  "scope": 78,
                  "src": "460:56:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 66,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "530:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 62,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 59,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "547:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "539:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 58,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "539:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 61,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "559:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "551:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "551:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "538:28:1"
                  },
                  "returnParameters": {
                    "id": 65,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 64,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 66,
                        "src": "585:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 63,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "585:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "584:6:1"
                  },
                  "scope": 78,
                  "src": "521:70:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 77,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "618:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 73,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 68,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "639:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "631:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 67,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "631:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "656:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "648:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 72,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "668:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "660:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "630:45:1"
                  },
                  "returnParameters": {
                    "id": 76,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 75,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 77,
                        "src": "694:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 74,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "694:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "693:6:1"
                  },
                  "scope": 78,
                  "src": "609:91:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 818,
              "src": "277:438:1",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "SmartWalletChecker",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 86,
              "linearizedBaseContracts": [
                86
              ],
              "name": "SmartWalletChecker",
              "nameLocation": "977:18:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "functionSelector": "c23697a8",
                  "id": 85,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "check",
                  "nameLocation": "1011:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 81,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 80,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "1025:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "1017:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 79,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:14:1"
                  },
                  "returnParameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 85,
                        "src": "1049:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1049:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1048:6:1"
                  },
                  "scope": 86,
                  "src": "1002:53:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 818,
              "src": "967:102:1",
              "usedErrors": []
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 87,
                    "name": "ReentrancyGuard",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 39,
                    "src": "1174:15:1"
                  },
                  "id": 88,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1174:15:1"
                }
              ],
              "canonicalName": "veBalMock",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 817,
              "linearizedBaseContracts": [
                817,
                39
              ],
              "name": "veBalMock",
              "nameLocation": "1161:9:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "veBalMock.Point",
                  "id": 97,
                  "members": [
                    {
                      "constant": false,
                      "id": 90,
                      "mutability": "mutable",
                      "name": "bias",
                      "nameLocation": "1302:4:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "1295:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 89,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1295:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 92,
                      "mutability": "mutable",
                      "name": "slope",
                      "nameLocation": "1323:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "1316:12:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 91,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1316:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 94,
                      "mutability": "mutable",
                      "name": "ts",
                      "nameLocation": "1364:2:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "1356:10:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 93,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1356:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 96,
                      "mutability": "mutable",
                      "name": "blk",
                      "nameLocation": "1384:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 97,
                      "src": "1376:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 95,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1376:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Point",
                  "nameLocation": "1280:5:1",
                  "nodeType": "StructDefinition",
                  "scope": 817,
                  "src": "1273:130:1",
                  "visibility": "public"
                },
                {
                  "canonicalName": "veBalMock.LockedBalance",
                  "id": 102,
                  "members": [
                    {
                      "constant": false,
                      "id": 99,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "1661:6:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1654:13:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      },
                      "typeName": {
                        "id": 98,
                        "name": "int128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1654:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 101,
                      "mutability": "mutable",
                      "name": "end",
                      "nameLocation": "1686:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 102,
                      "src": "1678:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 100,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1678:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "LockedBalance",
                  "nameLocation": "1631:13:1",
                  "nodeType": "StructDefinition",
                  "scope": 817,
                  "src": "1624:72:1",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 108,
                  "mutability": "constant",
                  "name": "ZERO_ADDRESS",
                  "nameLocation": "1721:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "1704:83:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 103,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1744:42:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "value": "0x0000000000000000000000000000000000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 105,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1736:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 104,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1736:7:1",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1736:51:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 111,
                  "mutability": "constant",
                  "name": "DEPOSIT_FOR_TYPE",
                  "nameLocation": "1810:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "1794:36:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1794:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "value": {
                    "hexValue": "30",
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1829:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 114,
                  "mutability": "constant",
                  "name": "CREATE_LOCK_TYPE",
                  "nameLocation": "1852:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "1836:36:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 112,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1836:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1871:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 117,
                  "mutability": "constant",
                  "name": "INCREASE_LOCK_AMOUNT",
                  "nameLocation": "1894:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "1878:40:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 115,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1878:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1917:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 120,
                  "mutability": "constant",
                  "name": "INCREASE_UNLOCK_TIME",
                  "nameLocation": "1940:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "1924:40:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int128",
                    "typeString": "int128"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "int128",
                    "nodeType": "ElementaryTypeName",
                    "src": "1924:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int128",
                      "typeString": "int128"
                    }
                  },
                  "value": {
                    "hexValue": "33",
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1963:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  "visibility": "internal"
                },
                {
                  "anonymous": false,
                  "eventSelector": "4566dfc29f6f11d13a418c26a02bef7c28bae749d4de47e4e6a7cddea6730d59",
                  "id": 132,
                  "name": "Deposit",
                  "nameLocation": "1977:7:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 122,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "provider",
                        "nameLocation": "2001:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "1985:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1985:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 124,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2019:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "2011:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 123,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2011:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 126,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "locktime",
                        "nameLocation": "2042:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "2026:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 125,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2026:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 128,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "type_",
                        "nameLocation": "2059:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "2052:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 127,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "2052:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 130,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ts",
                        "nameLocation": "2074:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 132,
                        "src": "2066:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 129,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2066:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1984:93:1"
                  },
                  "src": "1971:107:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "f279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568",
                  "id": 140,
                  "name": "Withdraw",
                  "nameLocation": "2141:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 139,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 134,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "provider",
                        "nameLocation": "2166:8:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "2150:24:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 133,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2150:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 136,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2184:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "2176:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 135,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2176:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 138,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "ts",
                        "nameLocation": "2199:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "2191:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 137,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2191:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2149:53:1"
                  },
                  "src": "2135:68:1"
                },
                {
                  "anonymous": false,
                  "eventSelector": "5e2aa66efd74cce82b21852e317e5490d9ecc9e6bb953ae24d90851258cc2f5c",
                  "id": 146,
                  "name": "Supply",
                  "nameLocation": "2214:6:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 145,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 142,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "prevSupply",
                        "nameLocation": "2229:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2221:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 141,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2221:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 144,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "supply",
                        "nameLocation": "2249:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2241:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2241:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2220:36:1"
                  },
                  "src": "2208:49:1"
                },
                {
                  "constant": true,
                  "id": 151,
                  "mutability": "constant",
                  "name": "WEEK",
                  "nameLocation": "2280:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2263:33:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_604800_by_1",
                      "typeString": "int_const 604800"
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "37",
                      "id": 148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2287:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_7_by_1",
                        "typeString": "int_const 7"
                      },
                      "value": "7"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "3836343030",
                      "id": 149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2291:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "86400"
                    },
                    "src": "2287:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_604800_by_1",
                      "typeString": "int_const 604800"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 156,
                  "mutability": "constant",
                  "name": "MAXTIME",
                  "nameLocation": "2358:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2341:38:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 152,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_31536000_by_1",
                      "typeString": "int_const 31536000"
                    },
                    "id": 155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "333635",
                      "id": 153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2368:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_365_by_1",
                        "typeString": "int_const 365"
                      },
                      "value": "365"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "3836343030",
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2374:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "86400"
                    },
                    "src": "2368:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_31536000_by_1",
                      "typeString": "int_const 31536000"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": true,
                  "id": 161,
                  "mutability": "constant",
                  "name": "MULTIPLIER",
                  "nameLocation": "2413:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2396:38:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2396:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "commonType": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "hexValue": "3130",
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2426:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10_by_1",
                        "typeString": "int_const 10"
                      },
                      "value": "10"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "**",
                    "rightExpression": {
                      "hexValue": "3138",
                      "id": 159,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2432:2:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_18_by_1",
                        "typeString": "int_const 18"
                      },
                      "value": "18"
                    },
                    "src": "2426:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "immutable",
                  "name": "TOKEN",
                  "nameLocation": "2460:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2442:23:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2442:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "immutable",
                  "name": "AUTHORIZER_ADAPTOR",
                  "nameLocation": "2490:18:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2472:36:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2472:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "functionSelector": "a3f4df7e",
                  "id": 167,
                  "mutability": "mutable",
                  "name": "NAME",
                  "nameLocation": "2608:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2594:18:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f76f8d78",
                  "id": 169,
                  "mutability": "mutable",
                  "name": "SYMBOL",
                  "nameLocation": "2650:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2636:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2636:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "immutable",
                  "name": "DECIMALS",
                  "nameLocation": "2701:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2683:26:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2683:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "mutability": "mutable",
                  "name": "supply",
                  "nameLocation": "2774:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2746:34:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 174,
                    "keyType": {
                      "id": 172,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2754:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2746:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 173,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2765:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "2802:12:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2786:28:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2786:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "cbf9fe5f",
                  "id": 182,
                  "mutability": "mutable",
                  "name": "locked",
                  "nameLocation": "2862:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2821:47:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LockedBalance_$102_storage_$",
                    "typeString": "mapping(address => struct veBalMock.LockedBalance)"
                  },
                  "typeName": {
                    "id": 181,
                    "keyType": {
                      "id": 178,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2829:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2821:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LockedBalance_$102_storage_$",
                      "typeString": "mapping(address => struct veBalMock.LockedBalance)"
                    },
                    "valueType": {
                      "id": 180,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 179,
                        "name": "LockedBalance",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 102,
                        "src": "2840:13:1"
                      },
                      "referencedDeclaration": 102,
                      "src": "2840:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_LockedBalance_$102_storage_ptr",
                        "typeString": "struct veBalMock.LockedBalance"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "900cf0cf",
                  "id": 184,
                  "mutability": "mutable",
                  "name": "epoch",
                  "nameLocation": "2890:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2875:20:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2875:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "d1febfb9",
                  "id": 189,
                  "mutability": "mutable",
                  "name": "point_history",
                  "nameLocation": "2947:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2902:58:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$100000000000000000000000000000_storage",
                    "typeString": "struct veBalMock.Point[100000000000000000000000000000]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 186,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 185,
                        "name": "Point",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 97,
                        "src": "2902:5:1"
                      },
                      "referencedDeclaration": 97,
                      "src": "2902:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Point_$97_storage_ptr",
                        "typeString": "struct veBalMock.Point"
                      }
                    },
                    "id": 188,
                    "length": {
                      "hexValue": "313030303030303030303030303030303030303030303030303030303030",
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2908:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100000000000000000000000000000_by_1",
                        "typeString": "int_const 100000000000000000000000000000"
                      },
                      "value": "100000000000000000000000000000"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2902:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$100000000000000000000000000000_storage_ptr",
                      "typeString": "struct veBalMock.Point[100000000000000000000000000000]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "user_point_history",
                  "nameLocation": "3038:18:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "2992:64:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Point_$97_storage_$1000000000_storage_$",
                    "typeString": "mapping(address => struct veBalMock.Point[1000000000])"
                  },
                  "typeName": {
                    "id": 195,
                    "keyType": {
                      "id": 190,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3000:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2992:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Point_$97_storage_$1000000000_storage_$",
                      "typeString": "mapping(address => struct veBalMock.Point[1000000000])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 192,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 191,
                          "name": "Point",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 97,
                          "src": "3011:5:1"
                        },
                        "referencedDeclaration": 97,
                        "src": "3011:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Point_$97_storage_ptr",
                          "typeString": "struct veBalMock.Point"
                        }
                      },
                      "id": 194,
                      "length": {
                        "hexValue": "31303030303030303030",
                        "id": 193,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3017:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000000000"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "3011:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$1000000000_storage_ptr",
                        "typeString": "struct veBalMock.Point[1000000000]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "functionSelector": "010ae757",
                  "id": 200,
                  "mutability": "mutable",
                  "name": "user_point_epoch",
                  "nameLocation": "3125:16:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "3090:51:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 199,
                    "keyType": {
                      "id": 197,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3098:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3090:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 198,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3109:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "71197484",
                  "id": 204,
                  "mutability": "mutable",
                  "name": "slope_changes",
                  "nameLocation": "3181:13:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "3147:47:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_int128_$",
                    "typeString": "mapping(uint256 => int128)"
                  },
                  "typeName": {
                    "id": 203,
                    "keyType": {
                      "id": 201,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3155:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3147:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_int128_$",
                      "typeString": "mapping(uint256 => int128)"
                    },
                    "valueType": {
                      "id": 202,
                      "name": "int128",
                      "nodeType": "ElementaryTypeName",
                      "src": "3166:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int128",
                        "typeString": "int128"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8ff36fd1",
                  "id": 206,
                  "mutability": "mutable",
                  "name": "future_smart_wallet_checker",
                  "nameLocation": "3383:27:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "3368:42:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3368:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7175d4f7",
                  "id": 208,
                  "mutability": "mutable",
                  "name": "smart_wallet_checker",
                  "nameLocation": "3431:20:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 817,
                  "src": "3416:35:1",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3416:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 277,
                    "nodeType": "Block",
                    "src": "3653:744:1",
                    "statements": [
                      {
                        "documentation": "@notice Contract constructor\n@param token_addr 80/20 BAL-WETH BPT token address\n@param _name Token name\n@param _symbol Token symbol\n@param _authorizer_adaptor `AuthorizerAdaptor` contract address",
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 222,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 220,
                                "name": "_authorizer_adaptor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 216,
                                "src": "3930:19:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 221,
                                "name": "ZERO_ADDRESS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 108,
                                "src": "3953:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3930:35:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42616c4d6f636b3a205f617574686f72697a65725f61646170746f72203d3d205a45524f5f41444452455353",
                              "id": 223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3967:46:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d247a43705e5c881f3262122c853604f0c71693d6fc4bfb408c0c42bb4b2caad",
                                "typeString": "literal_string \"BalMock: _authorizer_adaptor == ZERO_ADDRESS\""
                              },
                              "value": "BalMock: _authorizer_adaptor == ZERO_ADDRESS"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d247a43705e5c881f3262122c853604f0c71693d6fc4bfb408c0c42bb4b2caad",
                                "typeString": "literal_string \"BalMock: _authorizer_adaptor == ZERO_ADDRESS\""
                              }
                            ],
                            "id": 219,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3922:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3922:92:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 225,
                        "nodeType": "ExpressionStatement",
                        "src": "3922:92:1"
                      },
                      {
                        "expression": {
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 226,
                            "name": "TOKEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 163,
                            "src": "4025:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 227,
                            "name": "token_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 210,
                            "src": "4033:10:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4025:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 229,
                        "nodeType": "ExpressionStatement",
                        "src": "4025:18:1"
                      },
                      {
                        "expression": {
                          "id": 232,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 230,
                            "name": "AUTHORIZER_ADAPTOR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 165,
                            "src": "4053:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 231,
                            "name": "_authorizer_adaptor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "4074:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4053:40:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 233,
                        "nodeType": "ExpressionStatement",
                        "src": "4053:40:1"
                      },
                      {
                        "expression": {
                          "id": 240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 234,
                                "name": "point_history",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 189,
                                "src": "4103:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$100000000000000000000000000000_storage",
                                  "typeString": "struct veBalMock.Point storage ref[100000000000000000000000000000] storage ref"
                                }
                              },
                              "id": 236,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4117:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4103:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Point_$97_storage",
                                "typeString": "struct veBalMock.Point storage ref"
                              }
                            },
                            "id": 237,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "blk",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 96,
                            "src": "4103:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 238,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4126:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 239,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "4126:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4103:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 241,
                        "nodeType": "ExpressionStatement",
                        "src": "4103:35:1"
                      },
                      {
                        "expression": {
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 242,
                                "name": "point_history",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 189,
                                "src": "4148:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$100000000000000000000000000000_storage",
                                  "typeString": "struct veBalMock.Point storage ref[100000000000000000000000000000] storage ref"
                                }
                              },
                              "id": 244,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 243,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4162:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4148:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Point_$97_storage",
                                "typeString": "struct veBalMock.Point storage ref"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "ts",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 94,
                            "src": "4148:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 246,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4170:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4170:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4148:37:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 249,
                        "nodeType": "ExpressionStatement",
                        "src": "4148:37:1"
                      },
                      {
                        "assignments": [
                          251
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 251,
                            "mutability": "mutable",
                            "name": "_decimals",
                            "nameLocation": "4204:9:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 277,
                            "src": "4196:17:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 250,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4196:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 257,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 253,
                                  "name": "token_addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 210,
                                  "src": "4226:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 252,
                                "name": "BAL_ERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78,
                                "src": "4216:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_BAL_ERC20_$78_$",
                                  "typeString": "type(contract BAL_ERC20)"
                                }
                              },
                              "id": 254,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4216:21:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BAL_ERC20_$78",
                                "typeString": "contract BAL_ERC20"
                              }
                            },
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "decimals",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 47,
                            "src": "4216:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4216:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4196:52:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 261,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 259,
                                "name": "_decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 251,
                                "src": "4266:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "hexValue": "323535",
                                "id": 260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4279:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_255_by_1",
                                  "typeString": "int_const 255"
                                },
                                "value": "255"
                              },
                              "src": "4266:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "42616c4d6f636b3a205f646563696d616c73203e20323535",
                              "id": 262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4284:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_822a7c523e9311ee43723c99c74db16a4f1c0fb4496e4a102d0ad52c174be22e",
                                "typeString": "literal_string \"BalMock: _decimals > 255\""
                              },
                              "value": "BalMock: _decimals > 255"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_822a7c523e9311ee43723c99c74db16a4f1c0fb4496e4a102d0ad52c174be22e",
                                "typeString": "literal_string \"BalMock: _decimals > 255\""
                              }
                            ],
                            "id": 258,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4258:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4258:53:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 264,
                        "nodeType": "ExpressionStatement",
                        "src": "4258:53:1"
                      },
                      {
                        "expression": {
                          "id": 267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 265,
                            "name": "NAME",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 167,
                            "src": "4322:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 266,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 212,
                            "src": "4329:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4322:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 268,
                        "nodeType": "ExpressionStatement",
                        "src": "4322:12:1"
                      },
                      {
                        "expression": {
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 269,
                            "name": "SYMBOL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 169,
                            "src": "4344:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 270,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 214,
                            "src": "4353:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "4344:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "4344:16:1"
                      },
                      {
                        "expression": {
                          "id": 275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 273,
                            "name": "DECIMALS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "4370:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 274,
                            "name": "_decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 251,
                            "src": "4381:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4370:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 276,
                        "nodeType": "ExpressionStatement",
                        "src": "4370:20:1"
                      }
                    ]
                  },
                  "id": 278,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "token_addr",
                        "nameLocation": "3503:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3495:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3495:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 212,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "3537:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3523:19:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 211,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3523:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 214,
                        "mutability": "mutable",
                        "name": "_symbol",
                        "nameLocation": "3567:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3552:22:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 213,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3552:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 216,
                        "mutability": "mutable",
                        "name": "_authorizer_adaptor",
                        "nameLocation": "3592:19:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 278,
                        "src": "3584:27:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 215,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3584:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3485:132:1"
                  },
                  "returnParameters": {
                    "id": 218,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3653:0:1"
                  },
                  "scope": 817,
                  "src": "3474:923:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 285,
                    "nodeType": "Block",
                    "src": "4452:29:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 283,
                          "name": "TOKEN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 163,
                          "src": "4469:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 282,
                        "id": 284,
                        "nodeType": "Return",
                        "src": "4462:12:1"
                      }
                    ]
                  },
                  "functionSelector": "fc0c546a",
                  "id": 286,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token",
                  "nameLocation": "4413:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4418:2:1"
                  },
                  "returnParameters": {
                    "id": 282,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 286,
                        "src": "4444:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4444:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4443:9:1"
                  },
                  "scope": 817,
                  "src": "4404:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "4545:28:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 291,
                          "name": "NAME",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 167,
                          "src": "4562:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 290,
                        "id": 292,
                        "nodeType": "Return",
                        "src": "4555:11:1"
                      }
                    ]
                  },
                  "functionSelector": "06fdde03",
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "4495:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4499:2:1"
                  },
                  "returnParameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 289,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "4531:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 288,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4531:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4530:15:1"
                  },
                  "scope": 817,
                  "src": "4486:87:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 301,
                    "nodeType": "Block",
                    "src": "4639:30:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 299,
                          "name": "SYMBOL",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 169,
                          "src": "4656:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 298,
                        "id": 300,
                        "nodeType": "Return",
                        "src": "4649:13:1"
                      }
                    ]
                  },
                  "functionSelector": "95d89b41",
                  "id": 302,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "4587:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 295,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4593:2:1"
                  },
                  "returnParameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 302,
                        "src": "4625:13:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4625:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4624:15:1"
                  },
                  "scope": 817,
                  "src": "4578:91:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 309,
                    "nodeType": "Block",
                    "src": "4731:32:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 307,
                          "name": "DECIMALS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 171,
                          "src": "4748:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 306,
                        "id": 308,
                        "nodeType": "Return",
                        "src": "4741:15:1"
                      }
                    ]
                  },
                  "functionSelector": "313ce567",
                  "id": 310,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "4683:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4691:2:1"
                  },
                  "returnParameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 305,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 310,
                        "src": "4723:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 304,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4723:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4722:9:1"
                  },
                  "scope": 817,
                  "src": "4674:89:1",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 317,
                    "nodeType": "Block",
                    "src": "4816:42:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 315,
                          "name": "AUTHORIZER_ADAPTOR",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 165,
                          "src": "4833:18:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 314,
                        "id": 316,
                        "nodeType": "Return",
                        "src": "4826:25:1"
                      }
                    ]
                  },
                  "functionSelector": "f851a440",
                  "id": 318,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "admin",
                  "nameLocation": "4777:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 311,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4782:2:1"
                  },
                  "returnParameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 313,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 318,
                        "src": "4808:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4808:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4807:9:1"
                  },
                  "scope": 817,
                  "src": "4768:90:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "4923:2:1",
                    "statements": []
                  },
                  "functionSelector": "57f901e2",
                  "id": 324,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "commit_smart_wallet_checker",
                  "nameLocation": "4872:27:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "4908:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "4900:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4900:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4899:14:1"
                  },
                  "returnParameters": {
                    "id": 322,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4923:0:1"
                  },
                  "scope": 817,
                  "src": "4863:62:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 327,
                    "nodeType": "Block",
                    "src": "4977:2:1",
                    "statements": []
                  },
                  "functionSelector": "8e5b490f",
                  "id": 328,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "apply_smart_wallet_checker",
                  "nameLocation": "4939:26:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4965:2:1"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4977:0:1"
                  },
                  "scope": 817,
                  "src": "4930:49:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 333,
                    "nodeType": "Block",
                    "src": "5036:2:1",
                    "statements": []
                  },
                  "id": 334,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "assert_not_contract",
                  "nameLocation": "4993:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 331,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 330,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "5021:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 334,
                        "src": "5013:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 329,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5013:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5012:14:1"
                  },
                  "returnParameters": {
                    "id": 332,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5036:0:1"
                  },
                  "scope": 817,
                  "src": "4984:54:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 355,
                    "nodeType": "Block",
                    "src": "5120:304:1",
                    "statements": [
                      {
                        "assignments": [
                          343
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 343,
                            "mutability": "mutable",
                            "name": "uepoch",
                            "nameLocation": "5331:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 355,
                            "src": "5323:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 342,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5323:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice Get the most recently recorded rate of voting power decrease for `addr`\n@param addr Address of the user wallet\n@return Value of the slope",
                        "id": 347,
                        "initialValue": {
                          "baseExpression": {
                            "id": 344,
                            "name": "user_point_epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 200,
                            "src": "5340:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 346,
                          "indexExpression": {
                            "id": 345,
                            "name": "addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 336,
                            "src": "5357:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5340:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5323:39:1"
                      },
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 348,
                                "name": "user_point_history",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "5379:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Point_$97_storage_$1000000000_storage_$",
                                  "typeString": "mapping(address => struct veBalMock.Point storage ref[1000000000] storage ref)"
                                }
                              },
                              "id": 350,
                              "indexExpression": {
                                "id": 349,
                                "name": "addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 336,
                                "src": "5398:4:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5379:24:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$1000000000_storage",
                                "typeString": "struct veBalMock.Point storage ref[1000000000] storage ref"
                              }
                            },
                            "id": 352,
                            "indexExpression": {
                              "id": 351,
                              "name": "uepoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 343,
                              "src": "5404:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5379:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$97_storage",
                              "typeString": "struct veBalMock.Point storage ref"
                            }
                          },
                          "id": 353,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "slope",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 92,
                          "src": "5379:38:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "functionReturnParameters": 340,
                        "id": 354,
                        "nodeType": "Return",
                        "src": "5372:45:1"
                      }
                    ]
                  },
                  "functionSelector": "7c74a174",
                  "id": 356,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "get_last_user_slope",
                  "nameLocation": "5056:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 337,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 336,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "5084:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "5076:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5076:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5075:14:1"
                  },
                  "returnParameters": {
                    "id": 340,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 339,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 356,
                        "src": "5113:6:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 338,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "5113:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5112:8:1"
                  },
                  "scope": 817,
                  "src": "5047:377:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 372,
                    "nodeType": "Block",
                    "src": "5521:269:1",
                    "statements": [
                      {
                        "documentation": "@notice Get the timestamp for checkpoint `_idx` for `_addr`\n@param _addr User wallet address\n@param _idx User epoch number\n@return Epoch time of the checkpoint",
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 365,
                                "name": "user_point_history",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 196,
                                "src": "5749:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Point_$97_storage_$1000000000_storage_$",
                                  "typeString": "mapping(address => struct veBalMock.Point storage ref[1000000000] storage ref)"
                                }
                              },
                              "id": 367,
                              "indexExpression": {
                                "id": 366,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 358,
                                "src": "5768:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5749:25:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$1000000000_storage",
                                "typeString": "struct veBalMock.Point storage ref[1000000000] storage ref"
                              }
                            },
                            "id": 369,
                            "indexExpression": {
                              "id": 368,
                              "name": "_idx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 360,
                              "src": "5775:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5749:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$97_storage",
                              "typeString": "struct veBalMock.Point storage ref"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ts",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 94,
                          "src": "5749:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 364,
                        "id": 371,
                        "nodeType": "Return",
                        "src": "5742:41:1"
                      }
                    ]
                  },
                  "functionSelector": "da020a18",
                  "id": 373,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "user_point_history__ts",
                  "nameLocation": "5438:22:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "5469:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "5461:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5461:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 360,
                        "mutability": "mutable",
                        "name": "_idx",
                        "nameLocation": "5484:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "5476:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 359,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5476:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5460:29:1"
                  },
                  "returnParameters": {
                    "id": 364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 363,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "5513:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 362,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5513:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5512:9:1"
                  },
                  "scope": 817,
                  "src": "5429:361:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 385,
                    "nodeType": "Block",
                    "src": "5862:199:1",
                    "statements": [
                      {
                        "documentation": "@notice Get timestamp when `_addr`'s lock finishes\n@param _addr User wallet\n@return Epoch time of the lock end",
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 380,
                              "name": "locked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 182,
                              "src": "6037:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_LockedBalance_$102_storage_$",
                                "typeString": "mapping(address => struct veBalMock.LockedBalance storage ref)"
                              }
                            },
                            "id": 382,
                            "indexExpression": {
                              "id": 381,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 375,
                              "src": "6044:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6037:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_LockedBalance_$102_storage",
                              "typeString": "struct veBalMock.LockedBalance storage ref"
                            }
                          },
                          "id": 383,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 101,
                          "src": "6037:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 379,
                        "id": 384,
                        "nodeType": "Return",
                        "src": "6030:24:1"
                      }
                    ]
                  },
                  "functionSelector": "adc63589",
                  "id": 386,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "locked__end",
                  "nameLocation": "5804:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 375,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "5824:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "5816:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 374,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5816:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5815:15:1"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 378,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 386,
                        "src": "5854:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 377,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5854:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5853:9:1"
                  },
                  "scope": 817,
                  "src": "5795:266:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 394,
                  "name": "Transfer",
                  "nameLocation": "6087:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 393,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 388,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6112:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "6096:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6096:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 390,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6134:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "6118:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 389,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6118:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 392,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6146:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 394,
                        "src": "6138:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 391,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6138:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6095:57:1"
                  },
                  "src": "6081:72:1"
                },
                {
                  "body": {
                    "id": 403,
                    "nodeType": "Block",
                    "src": "6278:2:1",
                    "statements": []
                  },
                  "id": 404,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeTokenTransfer",
                  "nameLocation": "6168:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 401,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 396,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6206:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 404,
                        "src": "6198:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6198:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6228:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 404,
                        "src": "6220:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6220:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 400,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6248:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 404,
                        "src": "6240:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 399,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6240:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6188:72:1"
                  },
                  "returnParameters": {
                    "id": 402,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6278:0:1"
                  },
                  "scope": 817,
                  "src": "6159:121:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 413,
                    "nodeType": "Block",
                    "src": "6404:2:1",
                    "statements": []
                  },
                  "id": 414,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_afterTokenTransfer",
                  "nameLocation": "6295:19:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 411,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6332:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "6324:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6324:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6354:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "6346:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6346:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 410,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6374:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "6366:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 409,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6366:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6314:72:1"
                  },
                  "returnParameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6404:0:1"
                  },
                  "scope": 817,
                  "src": "6286:120:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 468,
                    "nodeType": "Block",
                    "src": "6477:321:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 427,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 422,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 416,
                                "src": "6495:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 425,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6514:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 424,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "6506:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 423,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6506:7:1",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6506:10:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6495:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6518:33:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              },
                              "value": "ERC20: mint to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              }
                            ],
                            "id": 421,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6487:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6487:65:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 430,
                        "nodeType": "ExpressionStatement",
                        "src": "6487:65:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 434,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6592:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6584:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 432,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6584:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 435,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6584:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 436,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "6596:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 437,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "6605:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 431,
                            "name": "_beforeTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 404,
                            "src": "6563:20:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6563:49:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 439,
                        "nodeType": "ExpressionStatement",
                        "src": "6563:49:1"
                      },
                      {
                        "expression": {
                          "id": 442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 440,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 177,
                            "src": "6623:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 441,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "6639:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6623:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 443,
                        "nodeType": "ExpressionStatement",
                        "src": "6623:22:1"
                      },
                      {
                        "expression": {
                          "id": 448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 444,
                              "name": "supply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 175,
                              "src": "6655:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 446,
                            "indexExpression": {
                              "id": 445,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "6662:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6655:15:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 447,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 418,
                            "src": "6674:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6655:25:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 449,
                        "nodeType": "ExpressionStatement",
                        "src": "6655:25:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 453,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6712:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 452,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6704:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 451,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6704:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6704:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 455,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "6716:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 456,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "6725:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 450,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "6695:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6695:37:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 458,
                        "nodeType": "EmitStatement",
                        "src": "6690:42:1"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 462,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6771:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 461,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6763:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 460,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6763:7:1",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 463,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6763:10:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 464,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 416,
                              "src": "6775:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 465,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 418,
                              "src": "6784:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 459,
                            "name": "_afterTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 414,
                            "src": "6743:19:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6743:48:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 467,
                        "nodeType": "ExpressionStatement",
                        "src": "6743:48:1"
                      }
                    ]
                  },
                  "id": 469,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "6421:5:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 419,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6435:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 469,
                        "src": "6427:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 415,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6427:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 418,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "6452:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 469,
                        "src": "6444:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 417,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6444:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6426:33:1"
                  },
                  "returnParameters": {
                    "id": 420,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6477:0:1"
                  },
                  "scope": 817,
                  "src": "6412:386:1",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 480,
                    "nodeType": "Block",
                    "src": "6932:2:1",
                    "statements": []
                  },
                  "id": 481,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkpoint",
                  "nameLocation": "6831:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 478,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 471,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "6851:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "6843:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 470,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6843:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "old_locked",
                        "nameLocation": "6878:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "6857:31:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedBalance_$102_memory_ptr",
                          "typeString": "struct veBalMock.LockedBalance"
                        },
                        "typeName": {
                          "id": 473,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 472,
                            "name": "LockedBalance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 102,
                            "src": "6857:13:1"
                          },
                          "referencedDeclaration": 102,
                          "src": "6857:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedBalance_$102_storage_ptr",
                            "typeString": "struct veBalMock.LockedBalance"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 477,
                        "mutability": "mutable",
                        "name": "new_locked",
                        "nameLocation": "6911:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 481,
                        "src": "6890:31:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedBalance_$102_memory_ptr",
                          "typeString": "struct veBalMock.LockedBalance"
                        },
                        "typeName": {
                          "id": 476,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 475,
                            "name": "LockedBalance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 102,
                            "src": "6890:13:1"
                          },
                          "referencedDeclaration": 102,
                          "src": "6890:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedBalance_$102_storage_ptr",
                            "typeString": "struct veBalMock.LockedBalance"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6842:80:1"
                  },
                  "returnParameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6932:0:1"
                  },
                  "scope": 817,
                  "src": "6822:112:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 495,
                    "nodeType": "Block",
                    "src": "7073:2:1",
                    "statements": []
                  },
                  "id": 496,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_deposit_for",
                  "nameLocation": "6948:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 493,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "6969:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "6961:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6961:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "6984:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "6976:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6976:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 487,
                        "mutability": "mutable",
                        "name": "unlock_time",
                        "nameLocation": "7000:11:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "6992:19:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 486,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6992:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 490,
                        "mutability": "mutable",
                        "name": "locked_balance",
                        "nameLocation": "7034:14:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "7013:35:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LockedBalance_$102_memory_ptr",
                          "typeString": "struct veBalMock.LockedBalance"
                        },
                        "typeName": {
                          "id": 489,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 488,
                            "name": "LockedBalance",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 102,
                            "src": "7013:13:1"
                          },
                          "referencedDeclaration": 102,
                          "src": "7013:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_LockedBalance_$102_storage_ptr",
                            "typeString": "struct veBalMock.LockedBalance"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 492,
                        "mutability": "mutable",
                        "name": "type_",
                        "nameLocation": "7057:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 496,
                        "src": "7050:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        "typeName": {
                          "id": 491,
                          "name": "int128",
                          "nodeType": "ElementaryTypeName",
                          "src": "7050:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int128",
                            "typeString": "int128"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6960:103:1"
                  },
                  "returnParameters": {
                    "id": 494,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7073:0:1"
                  },
                  "scope": 817,
                  "src": "6939:136:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 499,
                    "nodeType": "Block",
                    "src": "7111:2:1",
                    "statements": []
                  },
                  "functionSelector": "c2c4c5c1",
                  "id": 500,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "checkpoint",
                  "nameLocation": "7089:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 497,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7099:2:1"
                  },
                  "returnParameters": {
                    "id": 498,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7111:0:1"
                  },
                  "scope": 817,
                  "src": "7080:33:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 514,
                    "nodeType": "Block",
                    "src": "7192:37:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 510,
                              "name": "_addr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 502,
                              "src": "7208:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 511,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 504,
                              "src": "7215:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 509,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "7202:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7202:20:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 513,
                        "nodeType": "ExpressionStatement",
                        "src": "7202:20:1"
                      }
                    ]
                  },
                  "functionSelector": "3a46273e",
                  "id": 515,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 507,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 506,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "7179:12:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7179:12:1"
                    }
                  ],
                  "name": "deposit_for",
                  "nameLocation": "7127:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 505,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 502,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "7147:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "7139:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 501,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7139:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 504,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "7162:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 515,
                        "src": "7154:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7154:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7138:31:1"
                  },
                  "returnParameters": {
                    "id": 508,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7192:0:1"
                  },
                  "scope": 817,
                  "src": "7118:111:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 528,
                    "nodeType": "Block",
                    "src": "7294:104:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 523,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7310:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7310:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 525,
                              "name": "tokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "7322:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 522,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 469,
                            "src": "7304:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7304:25:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 527,
                        "nodeType": "ExpressionStatement",
                        "src": "7304:25:1"
                      }
                    ]
                  },
                  "functionSelector": "ffc9514d",
                  "id": 529,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 520,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 519,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "7281:12:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7281:12:1"
                    }
                  ],
                  "name": "create_lock",
                  "nameLocation": "7244:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 518,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "tokens",
                        "nameLocation": "7264:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 529,
                        "src": "7256:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 516,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7256:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7255:16:1"
                  },
                  "returnParameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7294:0:1"
                  },
                  "scope": 817,
                  "src": "7235:163:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 536,
                    "nodeType": "Block",
                    "src": "7460:2:1",
                    "statements": []
                  },
                  "functionSelector": "4957677c",
                  "id": 537,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 534,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 533,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "7447:12:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7447:12:1"
                    }
                  ],
                  "name": "increase_amount",
                  "nameLocation": "7413:15:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 532,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 531,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 537,
                        "src": "7429:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 530,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7429:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7428:9:1"
                  },
                  "returnParameters": {
                    "id": 535,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7460:0:1"
                  },
                  "scope": 817,
                  "src": "7404:58:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 544,
                    "nodeType": "Block",
                    "src": "7541:2:1",
                    "statements": []
                  },
                  "functionSelector": "eff7a612",
                  "id": 545,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 542,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 541,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "7528:12:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7528:12:1"
                    }
                  ],
                  "name": "increase_unlock_time",
                  "nameLocation": "7476:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 540,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 539,
                        "mutability": "mutable",
                        "name": "_unlock_time",
                        "nameLocation": "7505:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 545,
                        "src": "7497:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 538,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7497:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7496:22:1"
                  },
                  "returnParameters": {
                    "id": 543,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7541:0:1"
                  },
                  "scope": 817,
                  "src": "7467:76:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 550,
                    "nodeType": "Block",
                    "src": "7590:2:1",
                    "statements": []
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 551,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 548,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 547,
                        "name": "nonReentrant",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 38,
                        "src": "7577:12:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7577:12:1"
                    }
                  ],
                  "name": "withdraw",
                  "nameLocation": "7557:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 546,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7565:2:1"
                  },
                  "returnParameters": {
                    "id": 549,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7590:0:1"
                  },
                  "scope": 817,
                  "src": "7548:44:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 571,
                    "nodeType": "Block",
                    "src": "7881:358:1",
                    "statements": [
                      {
                        "assignments": [
                          562
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 562,
                            "mutability": "mutable",
                            "name": "_min",
                            "nameLocation": "8148:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 571,
                            "src": "8140:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 561,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8140:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice Binary search to find epoch containing block number\n@param _block Block to find\n@param max_epoch Don't go beyond this epoch\n@return Epoch which contains _block",
                        "id": 564,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8155:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8140:16:1"
                      },
                      {
                        "assignments": [
                          566
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 566,
                            "mutability": "mutable",
                            "name": "_max",
                            "nameLocation": "8174:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 571,
                            "src": "8166:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 565,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8166:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 568,
                        "initialValue": {
                          "id": 567,
                          "name": "max_epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 555,
                          "src": "8181:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8166:24:1"
                      },
                      {
                        "expression": {
                          "id": 569,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 562,
                          "src": "8228:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 559,
                        "id": 570,
                        "nodeType": "Return",
                        "src": "8221:11:1"
                      }
                    ]
                  },
                  "id": 572,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "find_block_epoch",
                  "nameLocation": "7798:16:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "_block",
                        "nameLocation": "7823:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "7815:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7815:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "max_epoch",
                        "nameLocation": "7839:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "7831:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7831:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7814:35:1"
                  },
                  "returnParameters": {
                    "id": 559,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 558,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 572,
                        "src": "7873:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 557,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7873:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7872:9:1"
                  },
                  "scope": 817,
                  "src": "7789:450:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 592,
                    "nodeType": "Block",
                    "src": "8344:368:1",
                    "statements": [
                      {
                        "assignments": [
                          583
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 583,
                            "mutability": "mutable",
                            "name": "_min",
                            "nameLocation": "8613:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 592,
                            "src": "8605:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 582,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8605:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice Binary search to find epoch for timestamp\n@param _timestamp timestamp to find\n@param max_epoch Don't go beyond this epoch\n@return Epoch which contains _timestamp",
                        "id": 585,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8620:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8605:16:1"
                      },
                      {
                        "assignments": [
                          587
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 587,
                            "mutability": "mutable",
                            "name": "_max",
                            "nameLocation": "8639:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 592,
                            "src": "8631:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 586,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8631:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 589,
                        "initialValue": {
                          "id": 588,
                          "name": "max_epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 576,
                          "src": "8646:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8631:24:1"
                      },
                      {
                        "expression": {
                          "id": 590,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 583,
                          "src": "8701:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 580,
                        "id": 591,
                        "nodeType": "Return",
                        "src": "8694:11:1"
                      }
                    ]
                  },
                  "id": 593,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "find_timestamp_epoch",
                  "nameLocation": "8253:20:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 577,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 574,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "8282:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "8274:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 573,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8274:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 576,
                        "mutability": "mutable",
                        "name": "max_epoch",
                        "nameLocation": "8302:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "8294:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 575,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8294:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8273:39:1"
                  },
                  "returnParameters": {
                    "id": 580,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 579,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 593,
                        "src": "8336:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8336:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8335:9:1"
                  },
                  "scope": 817,
                  "src": "8244:468:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "8828:418:1",
                    "statements": [
                      {
                        "assignments": [
                          606
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 606,
                            "mutability": "mutable",
                            "name": "_min",
                            "nameLocation": "9147:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 615,
                            "src": "9139:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9139:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice Binary search to find epoch for block number\n@param _addr User for which to find user epoch for\n@param _block Block to find\n@param max_epoch Don't go beyond this epoch\n@return Epoch which contains _block",
                        "id": 608,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9154:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9139:16:1"
                      },
                      {
                        "assignments": [
                          610
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 610,
                            "mutability": "mutable",
                            "name": "_max",
                            "nameLocation": "9173:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 615,
                            "src": "9165:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 609,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9165:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 612,
                        "initialValue": {
                          "id": 611,
                          "name": "max_epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 599,
                          "src": "9180:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9165:24:1"
                      },
                      {
                        "expression": {
                          "id": 613,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 606,
                          "src": "9235:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 603,
                        "id": 614,
                        "nodeType": "Return",
                        "src": "9228:11:1"
                      }
                    ]
                  },
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "find_block_user_epoch",
                  "nameLocation": "8726:21:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 600,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "8756:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "8748:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8748:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 597,
                        "mutability": "mutable",
                        "name": "_block",
                        "nameLocation": "8770:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "8762:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 596,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8762:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "max_epoch",
                        "nameLocation": "8786:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "8778:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8778:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8747:49:1"
                  },
                  "returnParameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "8820:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8820:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8819:9:1"
                  },
                  "scope": 817,
                  "src": "8717:529:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 638,
                    "nodeType": "Block",
                    "src": "9370:432:1",
                    "statements": [
                      {
                        "assignments": [
                          629
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 629,
                            "mutability": "mutable",
                            "name": "_min",
                            "nameLocation": "9703:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 638,
                            "src": "9695:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 628,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9695:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice Binary search to find user epoch for timestamp\n@param _addr User for which to find user epoch for\n@param _timestamp timestamp to find\n@param max_epoch Don't go beyond this epoch\n@return Epoch which contains _timestamp",
                        "id": 631,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9710:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9695:16:1"
                      },
                      {
                        "assignments": [
                          633
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 633,
                            "mutability": "mutable",
                            "name": "_max",
                            "nameLocation": "9729:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 638,
                            "src": "9721:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 632,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9721:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 635,
                        "initialValue": {
                          "id": 634,
                          "name": "max_epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 622,
                          "src": "9736:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9721:24:1"
                      },
                      {
                        "expression": {
                          "id": 636,
                          "name": "_min",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 629,
                          "src": "9791:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 626,
                        "id": 637,
                        "nodeType": "Return",
                        "src": "9784:11:1"
                      }
                    ]
                  },
                  "id": 639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "find_timestamp_user_epoch",
                  "nameLocation": "9260:25:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 618,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "9294:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "9286:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 617,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9286:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "_timestamp",
                        "nameLocation": "9308:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "9300:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9300:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "max_epoch",
                        "nameLocation": "9328:9:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "9320:17:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9320:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9285:53:1"
                  },
                  "returnParameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 639,
                        "src": "9362:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9362:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9361:9:1"
                  },
                  "scope": 817,
                  "src": "9251:551:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "9883:406:1",
                    "statements": [
                      {
                        "assignments": [
                          650
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 650,
                            "mutability": "mutable",
                            "name": "_t",
                            "nameLocation": "10196:2:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 656,
                            "src": "10188:10:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 649,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10188:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "documentation": "@notice Get the current voting power for `msg.sender`\n@dev Adheres to the ERC20 `balanceOf` interface for Aragon compatibility\n@param addr User wallet address\n@param _t Epoch time to return voting power at\n@return User voting power",
                        "id": 653,
                        "initialValue": {
                          "expression": {
                            "id": 651,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10201:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 652,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10201:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10188:28:1"
                      },
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10281:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 647,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "10274:8:1"
                      }
                    ]
                  },
                  "functionSelector": "00fdd58e",
                  "id": 657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "9816:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 644,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 641,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "9834:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "9826:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 640,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9826:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "_t",
                        "nameLocation": "9848:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "9840:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9840:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9825:26:1"
                  },
                  "returnParameters": {
                    "id": 647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 646,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "9875:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9875:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9874:9:1"
                  },
                  "scope": 817,
                  "src": "9807:482:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 668,
                    "nodeType": "Block",
                    "src": "10376:72:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10440:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 665,
                        "id": 667,
                        "nodeType": "Return",
                        "src": "10433:8:1"
                      }
                    ]
                  },
                  "functionSelector": "4ee2cd7e",
                  "id": 669,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOfAt",
                  "nameLocation": "10303:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "addr",
                        "nameLocation": "10323:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "10315:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10315:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 661,
                        "mutability": "mutable",
                        "name": "_block",
                        "nameLocation": "10337:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "10329:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 660,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10329:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10314:30:1"
                  },
                  "returnParameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 664,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 669,
                        "src": "10368:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10368:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10367:9:1"
                  },
                  "scope": 817,
                  "src": "10294:154:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 681,
                    "nodeType": "Block",
                    "src": "10530:76:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10594:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 678,
                        "id": 680,
                        "nodeType": "Return",
                        "src": "10587:8:1"
                      }
                    ]
                  },
                  "id": 682,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supply_at",
                  "nameLocation": "10462:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 672,
                        "mutability": "mutable",
                        "name": "p",
                        "nameLocation": "10485:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "10472:14:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                          "typeString": "struct veBalMock.Point"
                        },
                        "typeName": {
                          "id": 671,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 670,
                            "name": "Point",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 97,
                            "src": "10472:5:1"
                          },
                          "referencedDeclaration": 97,
                          "src": "10472:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Point_$97_storage_ptr",
                            "typeString": "struct veBalMock.Point"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "t",
                        "nameLocation": "10496:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "10488:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10488:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10471:27:1"
                  },
                  "returnParameters": {
                    "id": 678,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 677,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 682,
                        "src": "10522:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 676,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10522:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10521:9:1"
                  },
                  "scope": 817,
                  "src": "10453:153:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 696,
                    "nodeType": "Block",
                    "src": "10674:113:1",
                    "statements": [
                      {
                        "assignments": [
                          690
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 690,
                            "mutability": "mutable",
                            "name": "t",
                            "nameLocation": "10692:1:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 696,
                            "src": "10684:9:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 689,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10684:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 693,
                        "initialValue": {
                          "expression": {
                            "id": 691,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "10696:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10696:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10684:27:1"
                      },
                      {
                        "expression": {
                          "hexValue": "31",
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10775:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "functionReturnParameters": 688,
                        "id": 695,
                        "nodeType": "Return",
                        "src": "10768:8:1"
                      }
                    ]
                  },
                  "functionSelector": "bd85b039",
                  "id": 697,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "10620:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 685,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "t",
                        "nameLocation": "10640:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 697,
                        "src": "10632:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10632:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10631:11:1"
                  },
                  "returnParameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 687,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 697,
                        "src": "10666:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10666:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10665:9:1"
                  },
                  "scope": 817,
                  "src": "10611:176:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 815,
                    "nodeType": "Block",
                    "src": "10862:1100:1",
                    "statements": [
                      {
                        "documentation": "@notice Calculate total voting power at some point in the past\n@param _block Block to calculate the total voting power at\n@return Total voting power at `_block`",
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 708,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 705,
                                "name": "_block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 699,
                                "src": "11089:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 706,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "11099:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 707,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "11099:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11089:22:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5f626c6f636b203e20626c6f636b2e6e756d626572",
                              "id": 709,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11113:23:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e06eab2c638194ae486c50289bc5ae37f128838fd4603865501db43825f4541b",
                                "typeString": "literal_string \"_block > block.number\""
                              },
                              "value": "_block > block.number"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e06eab2c638194ae486c50289bc5ae37f128838fd4603865501db43825f4541b",
                                "typeString": "literal_string \"_block > block.number\""
                              }
                            ],
                            "id": 704,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11081:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11081:56:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 711,
                        "nodeType": "ExpressionStatement",
                        "src": "11081:56:1"
                      },
                      {
                        "assignments": [
                          713
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 713,
                            "mutability": "mutable",
                            "name": "_epoch",
                            "nameLocation": "11155:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 815,
                            "src": "11147:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 712,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11147:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 715,
                        "initialValue": {
                          "id": 714,
                          "name": "epoch",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "11164:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11147:22:1"
                      },
                      {
                        "assignments": [
                          717
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 717,
                            "mutability": "mutable",
                            "name": "target_epoch",
                            "nameLocation": "11187:12:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 815,
                            "src": "11179:20:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 716,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11179:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 722,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 719,
                              "name": "_block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 699,
                              "src": "11219:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 720,
                              "name": "_epoch",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "11227:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 718,
                            "name": "find_block_epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 572,
                            "src": "11202:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11202:32:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11179:55:1"
                      },
                      {
                        "assignments": [
                          725
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 725,
                            "mutability": "mutable",
                            "name": "point",
                            "nameLocation": "11258:5:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 815,
                            "src": "11245:18:1",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                              "typeString": "struct veBalMock.Point"
                            },
                            "typeName": {
                              "id": 724,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 723,
                                "name": "Point",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 97,
                                "src": "11245:5:1"
                              },
                              "referencedDeclaration": 97,
                              "src": "11245:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Point_$97_storage_ptr",
                                "typeString": "struct veBalMock.Point"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 729,
                        "initialValue": {
                          "baseExpression": {
                            "id": 726,
                            "name": "point_history",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 189,
                            "src": "11266:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$100000000000000000000000000000_storage",
                              "typeString": "struct veBalMock.Point storage ref[100000000000000000000000000000] storage ref"
                            }
                          },
                          "id": 728,
                          "indexExpression": {
                            "id": 727,
                            "name": "target_epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "11280:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11266:27:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Point_$97_storage",
                            "typeString": "struct veBalMock.Point storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11245:48:1"
                      },
                      {
                        "assignments": [
                          731
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 731,
                            "mutability": "mutable",
                            "name": "dt",
                            "nameLocation": "11311:2:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 815,
                            "src": "11303:10:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 730,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11303:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 733,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11316:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11303:14:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 734,
                            "name": "target_epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 717,
                            "src": "11331:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 735,
                            "name": "_epoch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 713,
                            "src": "11346:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11331:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 805,
                          "nodeType": "Block",
                          "src": "11602:172:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 780,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 776,
                                    "name": "point",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 725,
                                    "src": "11620:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                      "typeString": "struct veBalMock.Point memory"
                                    }
                                  },
                                  "id": 777,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "blk",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 96,
                                  "src": "11620:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 778,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "11633:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 779,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "11633:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11620:25:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 804,
                              "nodeType": "IfStatement",
                              "src": "11616:148:1",
                              "trueBody": {
                                "id": 803,
                                "nodeType": "Block",
                                "src": "11646:118:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 801,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 781,
                                        "name": "dt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 731,
                                        "src": "11664:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 800,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 793,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 785,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 782,
                                                  "name": "_block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 699,
                                                  "src": "11670:6:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 783,
                                                    "name": "point",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 725,
                                                    "src": "11679:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                      "typeString": "struct veBalMock.Point memory"
                                                    }
                                                  },
                                                  "id": 784,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "blk",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 96,
                                                  "src": "11679:9:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "11670:18:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 786,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "11669:20:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 791,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "expression": {
                                                    "id": 787,
                                                    "name": "block",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": -4,
                                                    "src": "11693:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_magic_block",
                                                      "typeString": "block"
                                                    }
                                                  },
                                                  "id": 788,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "timestamp",
                                                  "nodeType": "MemberAccess",
                                                  "src": "11693:15:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 789,
                                                    "name": "point",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 725,
                                                    "src": "11711:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                      "typeString": "struct veBalMock.Point memory"
                                                    }
                                                  },
                                                  "id": 790,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "ts",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 94,
                                                  "src": "11711:8:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "11693:26:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 792,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "11692:28:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11669:51:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 798,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 794,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "11724:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 795,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "number",
                                                "nodeType": "MemberAccess",
                                                "src": "11724:12:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 796,
                                                  "name": "point",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 725,
                                                  "src": "11739:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                    "typeString": "struct veBalMock.Point memory"
                                                  }
                                                },
                                                "id": 797,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blk",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 96,
                                                "src": "11739:9:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "11724:24:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 799,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "11723:26:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11669:80:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11664:85:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 802,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11664:85:1"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 806,
                        "nodeType": "IfStatement",
                        "src": "11327:447:1",
                        "trueBody": {
                          "id": 775,
                          "nodeType": "Block",
                          "src": "11353:245:1",
                          "statements": [
                            {
                              "assignments": [
                                739
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 739,
                                  "mutability": "mutable",
                                  "name": "point_next",
                                  "nameLocation": "11380:10:1",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 775,
                                  "src": "11367:23:1",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                    "typeString": "struct veBalMock.Point"
                                  },
                                  "typeName": {
                                    "id": 738,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 737,
                                      "name": "Point",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 97,
                                      "src": "11367:5:1"
                                    },
                                    "referencedDeclaration": 97,
                                    "src": "11367:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Point_$97_storage_ptr",
                                      "typeString": "struct veBalMock.Point"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 745,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 740,
                                  "name": "point_history",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 189,
                                  "src": "11393:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Point_$97_storage_$100000000000000000000000000000_storage",
                                    "typeString": "struct veBalMock.Point storage ref[100000000000000000000000000000] storage ref"
                                  }
                                },
                                "id": 744,
                                "indexExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 743,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 741,
                                    "name": "target_epoch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 717,
                                    "src": "11407:12:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "31",
                                    "id": 742,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11422:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "src": "11407:16:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11393:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Point_$97_storage",
                                  "typeString": "struct veBalMock.Point storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "11367:57:1"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 750,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 746,
                                    "name": "point",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 725,
                                    "src": "11442:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                      "typeString": "struct veBalMock.Point memory"
                                    }
                                  },
                                  "id": 747,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "blk",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 96,
                                  "src": "11442:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "expression": {
                                    "id": 748,
                                    "name": "point_next",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 739,
                                    "src": "11455:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                      "typeString": "struct veBalMock.Point memory"
                                    }
                                  },
                                  "id": 749,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "blk",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 96,
                                  "src": "11455:14:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "11442:27:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 774,
                              "nodeType": "IfStatement",
                              "src": "11438:150:1",
                              "trueBody": {
                                "id": 773,
                                "nodeType": "Block",
                                "src": "11470:118:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 771,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 751,
                                        "name": "dt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 731,
                                        "src": "11488:2:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 770,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 763,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 755,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "id": 752,
                                                  "name": "_block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 699,
                                                  "src": "11494:6:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 753,
                                                    "name": "point",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 725,
                                                    "src": "11503:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                      "typeString": "struct veBalMock.Point memory"
                                                    }
                                                  },
                                                  "id": 754,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "blk",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 96,
                                                  "src": "11503:9:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "11494:18:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 756,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "11493:20:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "commonType": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                },
                                                "id": 761,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                  "expression": {
                                                    "id": 757,
                                                    "name": "point_next",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 739,
                                                    "src": "11517:10:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                      "typeString": "struct veBalMock.Point memory"
                                                    }
                                                  },
                                                  "id": 758,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "ts",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 94,
                                                  "src": "11517:13:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                  "expression": {
                                                    "id": 759,
                                                    "name": "point",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 725,
                                                    "src": "11533:5:1",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                      "typeString": "struct veBalMock.Point memory"
                                                    }
                                                  },
                                                  "id": 760,
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "memberName": "ts",
                                                  "nodeType": "MemberAccess",
                                                  "referencedDeclaration": 94,
                                                  "src": "11533:8:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "src": "11517:24:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 762,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "11516:26:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11493:49:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 768,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "expression": {
                                                  "id": 764,
                                                  "name": "point_next",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 739,
                                                  "src": "11546:10:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                    "typeString": "struct veBalMock.Point memory"
                                                  }
                                                },
                                                "id": 765,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blk",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 96,
                                                "src": "11546:14:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 766,
                                                  "name": "point",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 725,
                                                  "src": "11563:5:1",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                                    "typeString": "struct veBalMock.Point memory"
                                                  }
                                                },
                                                "id": 767,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "blk",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 96,
                                                "src": "11563:9:1",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "11546:26:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 769,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "11545:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11493:80:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "11488:85:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 772,
                                    "nodeType": "ExpressionStatement",
                                    "src": "11488:85:1"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 808,
                              "name": "point",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 725,
                              "src": "11864:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                "typeString": "struct veBalMock.Point memory"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 809,
                                  "name": "point",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 725,
                                  "src": "11871:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                    "typeString": "struct veBalMock.Point memory"
                                  }
                                },
                                "id": 810,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "ts",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 94,
                                "src": "11871:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 811,
                                "name": "dt",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 731,
                                "src": "11882:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11871:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Point_$97_memory_ptr",
                                "typeString": "struct veBalMock.Point memory"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 807,
                            "name": "supply_at",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 682,
                            "src": "11854:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Point_$97_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (struct veBalMock.Point memory,uint256) view returns (uint256)"
                            }
                          },
                          "id": 813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11854:31:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 703,
                        "id": 814,
                        "nodeType": "Return",
                        "src": "11847:38:1"
                      }
                    ]
                  },
                  "functionSelector": "981b24d0",
                  "id": 816,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupplyAt",
                  "nameLocation": "10801:13:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "_block",
                        "nameLocation": "10823:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 816,
                        "src": "10815:14:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10815:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10814:16:1"
                  },
                  "returnParameters": {
                    "id": 703,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 702,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 816,
                        "src": "10854:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 701,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10854:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10853:9:1"
                  },
                  "scope": 817,
                  "src": "10792:1170:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 818,
              "src": "1152:10813:1",
              "usedErrors": []
            }
          ],
          "src": "129:11839:1"
        },
        "id": 1
      }
    }
  }
}
